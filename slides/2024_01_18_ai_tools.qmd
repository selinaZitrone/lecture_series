---
title: "AI tools in programming"
subtitle: "Scientific workflows: Tools and Tips 🛠️"
author: "Dr. Selina Baldauf"
date: "2024-01-18"
format: 
  revealjs:
    footer: "Selina Baldauf // AI tools"
    highlight-style: printing
    mainfont: Cabinet Grotesk
    slide-number: true
    show-slide-number: all
    incremental: true
    self-contained: true
    code-line-numbers: false
    theme: slides.scss
    auto-stretch: false
editor: source
execute: 
  echo: true
  eval: true
  cache: true
  message: false
knitr: 
  opts_chunk: 
    collapse: true
    comment: "#>" 
from: markdown+emoji
---

## What is this lecture series?

### Scientific workflows: Tools and Tips :hammer_and_wrench:

::: nonincremental
:date: Every 3rd Thursday :clock4: 4-5 p.m. :round_pushpin: Webex

-   One topic from the world of scientific workflows
-   Material provided [online](https://selinazitrone.github.io/tools_and_tips/)
-   If you don't want to miss a lecture
    -   [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)
:::

## Motivation

:::{.columns}

:::{.column width="50%"}

- AI tools assist programmers with
  - Coding
  - Debugging
  - Learning
  - ...
- Higher productivity and efficiency
- More motivation

:::

:::{.column width="50%"}

![](images/2024_01_18_ai_tools/dalle_motivation.png)

:::

:::

## Overview of tools

- **Browser-based chat bots** (ChatGPT, Bard, ...)
  - General-purpose
  - Prompt-engineering to get good programming answers

- **Data-analysis tools** (ChatGPT data analyst, RTutor)
  - Upload data and ask questions about it
  - Download the code that was used for the results

- **Integrated AI tools** (Github Copilot, Codium AI, ...)
  - Integrated directly in programming environment
  - Real-time suggestions, chat, debugging, ...

## Now You

Webex poll:<br><br>

:question: What is your **main programming language** <br><br>

:question: Which **IDE (programming environment)** do you use <br><br>

:question: Which **AI tools for programming** did you already try <br><br>

## Today

- Focus on **integrated AI tools**
  - Functioning and use cases

- Find other tools on the [website](https://selinazitrone.github.io/tools_and_tips/07_ai_tools.html)

- Concerns when using AI tools

- **Main goal:** Motivate you to try out tools and find out what fits your workflow

# Integrated AI tools for programming

> Mainly GitHub Copilot

## [GitHub Copilot](https://github.com/features/copilot)

- Cloud-based AI tool by Github and OpenAI
- Model based on GPT-4 and OpenAI's Codex
  - Specifically trained on source code
- Basic idea: Plugin for your IDE to integrate Copilot
- Provides
  - Inline code-suggestions
  - Funtionality to document, correct, explain and create
  - A chat to ask questions about your code project
  - ...
- Works best for well-represented languages (Python, JS, ...)
  
## What you need for GH Copilot

- GitHub Account
- Active GH Copilot subscription (10$ per month)
  - Get it for free as an academic with an educational account
- IDE that supports Copilot
  - Full support: Visual Studio (Code), Vim, Neovim, JetBrains IDEs (e.g. PyCharm)
  - Limited support: RStudio, ?
- Installation of the extensions
  - VS Code: Github Copilot & Github Copilot Chat
  - RStudio: `Tools -> Global Options -> Copilot`

## What you need for GH Copilot

See [website](https://selinazitrone.github.io/tools_and_tips/07_ai_tools.html) for more info
on how to get and setup GH Copilot.

# Using GH Copilot

> Features and use cases

## Inline code suggestions

-  Copilot tries to predict what you want to do next
-  Suggests code that can be accepted with `Tab`
-  Suggestions are based on the context
   -  Previous code
   -  Comments
   -  Variable and function names
   -  ...
-  Supported in RStudio
  
## Get better suggestions

- **Provide context**
  - Open other files
  - Add top level comments explaining the purpose of the script
  - Name variables and functions properly
  - Copy-paste sample code and delete it later

- **Be consistent**
  - "Garbage in, garbage out"
  - Have a nice and consistent coding style

Side effect of using Copilot: More good-practice coding

## Chat

- Needs an additional extension (GitHub Copilot Chat)
- Context of the chat can be:
  - Highlighted lines of code
  - The whole script or project
- Preset commands with optional text starting with `/` 
  - `/fix`: fix problems in your code
  - `/doc`: create a documentation for the
  - `/explain`: explain this code
  - `/test`: write unit tests
  - `/new`: create new projects or scripts with code

## [Codium AI](https://www.codium.ai/) as an alternative

- No inline code suggestions
- Great functionality to
  - Explain code
  - Suggestsions improve and enhance code
  - Generate tests
- Not in RStudio, but in VS code and many other IDEs
- Free for personal use (for now)

## Concerns

- **Privacy** [(GH Copilot privacy FAQ)](https://github.com/features/copilot/#faq)
  - Chose whether your prompts and suggestions will be used for `Github -> Seetings -> Copilot -> Policies`
- **Plagiarism**
  - Should not happen but has been reported
  - Block suggestions matching public code (`Github -> Seetings -> Copilot -> Policies`)
- **Ethical concerns**
  - For-profit tool trained on open-source
- **Envioronmental concerns**
  - Water and enery usage

## Usage guidelines

- No definite guidelines, but see some examples on [lecture website](https://selinazitrone.github.io/tools_and_tips/07_ai_tools.html)
- **Responsibility**
  - You are responsible for your scientific output
  - Stay critical, double-check
- **Transparency**
  - Make clear for which tasks you used which AI
- **Know relevant guidelines**
  - Journals
  - Your university
- Don't use AI in exams

# Summary

- AI tools for programming are fun and useful
- Try different tools and find the ones you like
- Think about concerns
- Learn about relevant guidelines
- Development is fast, so keep up

## Next lecture

#### Topic t.b.a.

<br>

:date: 15th February :clock4: 4-5 p.m. :round_pushpin: Webex

:bell: [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)

:e-mail: For topic suggestions and/or feedback [send me an email](mailto:selina.baldauf@fu-berlin.de)

## Thank you for your attention :)
Questions?

## References

- 

see [here](https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp) for more info
