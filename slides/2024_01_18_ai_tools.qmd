---
title: "AI tools in programming"
subtitle: "Scientific workflows: Tools and Tips 🛠️"
author: "Dr. Selina Baldauf"
date: "2024-01-18"
format: 
  revealjs:
    footer: "Selina Baldauf // AI tools"
    highlight-style: printing
    mainfont: Cabinet Grotesk
    slide-number: true
    show-slide-number: all
    incremental: true
    self-contained: true
    code-line-numbers: false
    theme: slides.scss
    auto-stretch: false
editor: source
execute: 
  echo: true
  eval: true
  cache: true
  message: false
knitr: 
  opts_chunk: 
    collapse: true
    comment: "#>" 
from: markdown+emoji
---

## What is this lecture series?

### Scientific workflows: Tools and Tips :hammer_and_wrench:

::: nonincremental
:date: Every 3rd Thursday :clock4: 4-5 p.m. :round_pushpin: Webex

-   One topic from the world of scientific workflows
-   Material provided [online](https://selinazitrone.github.io/tools_and_tips/)
-   If you don't want to miss a lecture
    -   [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)
:::

## Motivation

::: {.columns}

- AI tools assist programmers with
  - Coding
  - Debugging
  - Learning
  - ...
- Higher productivity and efficiency
- More motivation

::: {.column width="50%"}


:::
::: {.column width="50%"}

![](images/2024_01_18_ai_tools/dalle_motivation.png)

:::

## Overview of tools

- **Browser-based chat bots** (ChatGPT, Bard, ...)
  - General-purpose
  - Prompt-engineering to get good programming answers
  - Interactive learning, brainstorming, ...

- **Data-analysis tools** (ChatGPT data analyst, RTutor)
  - Execute code and give you results
  - Upload data and ask questions about it
  - Download the code

- **Integrated AI tools** (Github Copilot, Codium AI, ...)
  - Integrated directly in programming environment
  - Real-time suggestions, chat, debugging, ...

## Now You

Webex survey:

:red_question: What is your main programming language <br><br>

:red_question: Which IDE do you use? <br><br>

:red_question: Which AI tools for programming did you already try? <br><br>

## Today

:grey_question: Which AI tools did you try already for programming?

- Focus on **integrated AI tools** (Github Copilot)
  - Functioning and use cases

- Find other tools on the [website](https://selinazitrone.github.io/tools_and_tips/07_ai_tools.html)

- Concerns when using AI tools

- Goal: Motivate you to try out tools and find out what fits your workflow

# Integrated AI tools for programming

## GitHub Copilot

- Cloud-based AI tools by Github and OpenAI
- Model based on GPT4 and OpenAI's Codex
  - Specifically trained on
- Basic idea: Plugin for your IDE to integrate Copilot
- Provides
  - Inline code-suggestions
  - A chat to ask questions about your code project
  - Funtionality to document, correct, explain and create
  - ...
- Works best for well-represented languages (Python, JS, ...)
  
## How to get GH Copilot

You need:

- GitHub Account
- An active GH Copilot subscription
  - 10$ per month
  - Get it for free as academic with an educational account
- An IDE that supports Copilot
  - Full support in: Visual Studio Code, Visual Studio, Vim, Neovim, the JetBrains suite of IDE (e.g. PyCharm)
  - Limited support: RStudio, ?
- Installation of the extensions
  - VS Code: Github Copilot & Github Copilot Chat
  - RStudio: `Tools -> Global Options -> Copilot`

. . .

See [website](https://selinazitrone.github.io/tools_and_tips/07_ai_tools.html) for more info.

# Using GH Copilot

> Features and use cases

## Inline code suggestions

-  Supported in RStudio
-  Copilot tries to guess what you want to do
-  Suggests code that can be accepted with `Tab`
-  Suggestions are based on the context
   -  Previous code
   -  Comments
   -  Variable and function names
   -  ...
  
## Get better suggestions

see [here](https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp) for more info

- Provide context
  - Open other files
  - Add top level comments explaining the purpose of the script
  - Name variables and functions properly
  - Copy-paste sample code and delete it later

- Be consistent
  - "Garbage in, garbage out"
  - Have a nice and consistent coding style

Side effect of using Copilot: More good-practice coding

## Chat

- Needs an additional extension
  - In VS Code: GitHub Copilot Chat
- Context of the chat can be:
  - Highlightes lines of code
  - The whole script
  - The whole project
- Preset commands with optional text starting with `/` 
  - `/fix`: fix problems in your code
  - `/doc`: create a documentation for the
  - `/explain`: explain this code
  - `/test`: write unit tests
  - `/new`: Create new projects or scripts with Code

## Codium AI as an alternative

- No inline code suggestions
- Great functionality to
  - Explain code
  - Suggestsions improve and enhance code
  - Generate tests
- Not in RStudio, but in VS code and many other IDEs
- Free for personal use (for now)

## Concerns

- Privacy


# Summary

- But keep in mind
  - AI can make mistakes: doublecheck!
  - AI might not know newest techniques

## Next lecture

#### Topic t.b.a.

<br>

:date: 18th January :clock4: 4-5 p.m. :round_pushpin: Webex

:bell: [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)

:e-mail: For topic suggestions and/or feedback [send me an email](mailto:selina.baldauf@fu-berlin.de)

## Thank you for your attention :)
Questions?