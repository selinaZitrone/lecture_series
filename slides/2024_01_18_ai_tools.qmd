---
title: "AI tools in programming"
subtitle: "Scientific workflows: Tools and Tips 🛠️"
author: "Dr. Selina Baldauf"
date: "2024-01-18"
format: 
  revealjs:
    footer: "Selina Baldauf // AI tools in programming"
    highlight-style: printing
    mainfont: Cabinet Grotesk
    slide-number: true
    show-slide-number: all
    incremental: true
    self-contained: true
    code-line-numbers: false
    theme: slides.scss
    auto-stretch: false
editor: source
execute: 
  echo: true
  eval: true
  cache: true
  message: false
knitr: 
  opts_chunk: 
    collapse: true
    comment: "#>" 
from: markdown+emoji
---

## What is this lecture series?

### Scientific workflows: Tools and Tips :hammer_and_wrench:

::: nonincremental
:date: Every 3rd Thursday :clock4: 4-5 p.m. :round_pushpin: Webex

-   One topic from the world of scientific workflows
-   Material provided [online](https://selinazitrone.github.io/tools_and_tips/)
-   If you don't want to miss a lecture
    -   [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)
:::

## Motivation

:::{.columns}

:::{.column width="50%"}

- AI tools assist programmers with
  - Coding
  - Debugging
  - Learning
  - ...
- Higher productivity and efficiency
- More motivation

:::

:::{.column width="50%"}

![](images/2024_01_18_ai_tools/dalle_motivation.png)

:::

:::

## Overview of tools

- **Browser-based chat bots** ([ChatGPT](https://chat.openai.com), [Bard](https://bard.google.com), ...)
  - General-purpose<br>

- **Data-analysis tools** (Data analyst GPT, [RTutor](https://rtutor.ai/), ...)
  - Upload data and ask questions about it
  - Download the code that was used for the results<br>

- **Integrated AI tools** ([GitHub Copilot](https://github.com/features/copilot), [Codium AI](https://codium.ai/), ...)
  - Integrated directly in programming environment
  - Real-time suggestions, chat, debugging, ...<br>

## Today

- Focus on **integrated AI tools**
  - How to use GitHub Copilot to
    - Speed up your coding
    - Improve your code
    - Learn

- Concerns when using AI tools

- **Main goal:** Motivate you to try out tools and find out what fits your workflow

- Find other tools on the [website](https://selinazitrone.github.io/tools_and_tips/sessions/07_ai_tools.html)

## Now You

<br><br>

:question: What is your **main programming language** <br><br>

:question: Which **IDE (programming environment)** do you use <br><br>

:question: Which **AI tools for programming** did you already try <br><br>

# Integrated AI tools for programming

> Mainly GitHub Copilot

## GitHub Copilot

- Cloud-based AI tool by Github and OpenAI
- Model based on GPT-4 and OpenAI's Codex
  - Specifically trained on source code
- Basic idea: Plugin for your IDE to integrate Copilot
- Works best for well-represented languages (Python, JS, ...)
  
## How to get GitHub Copilot

See [lecture website](https://selinazitrone.github.io/tools_and_tips/sessions/additional_material/07_ai_tools/get_copilot_step_by_step.html) for step-by-step guide and more information.

It's really easy, but you need:

- GitHub Account
- Active GH Copilot subscription (10$ per month)
  - Get it for free as an academic with an educational account
- IDE that supports Copilot
  - Full support: Visual Studio (Code), Vim, Neovim, JetBrains IDEs (e.g. PyCharm)
  - Limited support: RStudio, ?



# Using GitHub Copilot

> Demo of the main features and use cases

## Inline code suggestions

:::{.columns}

:::{.column width="50%"}

-  Copilot tries to predict what you want to do next
-  Suggestions are based on the context
   -  Previous code
   -  Comments
   -  Variable and function names
   -  ...

:::

:::{.column width="50%"}

![](images/2024_01_18_ai_tools/01_fibonacci_demo.gif)

:::

:::
  
## Get better suggestions

- **Provide context**
  - Open other files
  - Add top level comments explaining the purpose of the script
  - Name variables and functions properly
  - Copy-paste sample code and delete it later

- **Be consistent**
  - "Garbage in, garbage out"
  - Have a nice and consistent coding style

Nice side effect of using Copilot: More good-practice coding

## Chat

- Ask and give commands regarding:
  - Highlighted lines of code
  - The whole script or project
- Preset commands starting with `/` 
  - `/fix`: fix problems in your code
  - `/doc`: get documentation
  - `/explain`: explain this code
  - `/test`: write unit tests
  - `/new`: create new projects or scripts with code

## /fix with in-line chat

![](images/2024_01_18_ai_tools/02_fibonacci_fix_negative_no.gif)

## /fix with chat in the sidebar

![](images/2024_01_18_ai_tools/03_lubridate_fix_chat.gif)

## /doc with specific documentation standard

![](images/2024_01_18_ai_tools/05_fibonacci_doc_roxygen.gif)

## /explain

![](images/2024_01_18_ai_tools/06_fibonacci_explain.gif)

## Translate code

![](images/2024_01_18_ai_tools/07_fibonacci_translate_to_python.gif)

## Codium AI as an alternative

- No inline code suggestions
- Great functionality to
  - Explain code
  - Suggestsions improve and enhance code
  - Generate tests
- Not in RStudio, but in VS code and many other IDEs
- Free for personal use (for now)

## Concerns to consider

- **Privacy**
  - Chose whether your prompts and suggestions will be used by Github (`Github -> Seetings -> Copilot -> Policies`)
- **Plagiarism**
  - Block suggestions matching public code (`Github -> Seetings -> Copilot -> Policies`)
- **Ethical concerns**
  - For-profit tool trained on open-source
- **Environmental concerns**
  - Water and enery usage

## Usage guidelines

- No definite guidelines, but see examples on [lecture website](https://selinazitrone.github.io/tools_and_tips/sessions/07_ai_tools.html#concerns-and-guidelines)
- **Responsibility**
  - You are responsible for your scientific output
  - Stay critical, double-check
- **Transparency**
  - Make clear for which tasks you used which AI
- **Know relevant guidelines**
  - Journals
  - Your university
- Don't use AI in exams

# Summary

- AI tools for programming can be extremely useful
- Try different tools and find the ones you like
- Think about concerns
- Learn about relevant guidelines
- Development is fast, so keep up
- Check out the [lecture website](https://selinazitrone.github.io/tools_and_tips/sessions/07_ai_tools.html) if you want to get started

## Next lecture

#### Topic t.b.a.

<br>

:date: 15th February :clock4: 4-5 p.m. :round_pushpin: Webex

:bell: [Subscribe to the mailing list](https://lists.fu-berlin.de/listinfo/toolsAndTips)

:e-mail: For topic suggestions and/or feedback [send me an email](mailto:selina.baldauf@fu-berlin.de)

## Thank you for your attention :)
Questions?<br><br><br><br>

Thanks to Anne Lewerentz for support with the preparation. 

## References

:::{.nonincremental}

- [Experiment on programmer efficiency with AI tools](https://arxiv.org/abs/2302.06590)
- [GitHub Copilot](https://github.com/features/copilot)
- [GitHub Copilot privacy FAQ](https://github.com/features/copilot/#faq)
- [GitHub Copilot Docs](https://docs.github.com/en/copilot): Useful information and guides on how to use Copilot
- [Prompt engineering with GitHub Copilot](https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp)
- [Codium AI](https://codium.ai/)

:::

## References

:::{.nonincremental}

#### Guidelines

- [DFG Rules on the use of AI](https://www.dfg.de/resource/blob/289676/89c03e7a7a8a024093602995974832f9/230921-statement-executive-committee-ki-ai-data.pdf) particularly for proposals
- [Nature living guidelines on responsible use of generative AI in research](https://www.nature.com/articles/d41586-023-03266-1)
- [EU AI Act](https://artificialintelligenceact.eu/)
- Universities (German)
  - [FU Berlin "Eckpunktepapier" (German)](https://www.fu-berlin.de/campusleben/lernen-und-lehren/2023/230511-umgang-mit-ki/Eckpunkte_FUB_KI-in-der-Lehre.pdf)
  - [TU Berlin on AI](https://www.tu.berlin/bzhl/ressourcen-fuer-ihre-lehre/ressourcen-nach-themenbereichen/ki-in-der-hochschullehre): Mainly about AI in teaching but contains some general links to other guidelines

:::