[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Scientific workflows: Tools and Tips üõ†Ô∏è",
    "section": "",
    "text": "Early-career researchers understand the importance of digital tools for processing data, managing workflows, and enhancing efficiency. However, they often lack time to discover new tools and improve their workflows. In this lecture series we will explore a diverse range of topics, including R code quality and efficiency, reproducible document creation, version control with Git, literature management, and academic note taking. You‚Äôll learn practical tips and tricks that can help you optimize your research workflow and increase your productivity.\n\n\n\nüìÖ Every 3rd Thursday üïì 4-5 p.m. üìç Webex\nIf you don‚Äôt want to miss a lecture: Check out the official lecture website and subscribe to the mailing list to get the link to the lecture meeting.\nFor any questions, feedback or topic suggestions send me an email\n\n\n\nOn this website, you can find all slides and additional resources for lectures:\n\n2023-04-20: What they forgot to teach you about R\n2023-05-11: Reproducible documents with Quarto\n2023-06-15: Introduction to verion control with Git\n2023-07-20: Research compendia as R packages"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Scientific workflows: Tools and Tips üõ†Ô∏è",
    "section": "",
    "text": "Version 3, 29 June 2007\nCopyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/>\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\n\nThe GNU General Public License is a free, copyleft license for software and other kinds of works.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program‚Äìto make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nTo protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\nDevelopers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.\nFor the developers‚Äô and authors‚Äô protection, the GPL clearly explains that there is no warranty for this free software. For both users‚Äô and authors‚Äô sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.\nSome devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users‚Äô freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.\nFinally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.\nThe precise terms and conditions for copying, distribution and modification follow.\n\n\n\n\n\n‚ÄúThis License‚Äù refers to version 3 of the GNU General Public License.\n‚ÄúCopyright‚Äù also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n‚ÄúThe Program‚Äù refers to any copyrightable work licensed under this License. Each licensee is addressed as ‚Äúyou‚Äù. ‚ÄúLicensees‚Äù and ‚Äúrecipients‚Äù may be individuals or organizations.\nTo ‚Äúmodify‚Äù a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a ‚Äúmodified version‚Äù of the earlier work or a work ‚Äúbased on‚Äù the earlier work.\nA ‚Äúcovered work‚Äù means either the unmodified Program or a work based on the Program.\nTo ‚Äúpropagate‚Äù a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo ‚Äúconvey‚Äù a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\n\n\nThe ‚Äúsource code‚Äù for a work means the preferred form of the work for making modifications to it. ‚ÄúObject code‚Äù means any non-source form of a work.\nA ‚ÄúStandard Interface‚Äù means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe ‚ÄúSystem Libraries‚Äù of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A ‚ÄúMajor Component‚Äù, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe ‚ÄúCorresponding Source‚Äù for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work‚Äôs System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\n\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work‚Äôs users, your or third parties‚Äô legal rights to forbid circumvention of technological measures.\n\n\n\nYou may convey verbatim copies of the Program‚Äôs source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\n\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\n\na) The work must carry prominent notices stating that you modified it, and giving a relevant date.\nb) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to ‚Äúkeep intact all notices‚Äù.\nc) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.\n\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ‚Äúaggregate‚Äù if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation‚Äôs users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\n\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\n\na) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.\nd) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA ‚ÄúUser Product‚Äù is either (1) a ‚Äúconsumer product‚Äù, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, ‚Äúnormally used‚Äù refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n‚ÄúInstallation Information‚Äù for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\n\n\n‚ÄúAdditional permissions‚Äù are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\n\na) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or authors of the material; or\ne) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.\n\nAll other non-permissive additional terms are considered ‚Äúfurther restrictions‚Äù within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\n\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\n\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\n\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn ‚Äúentity transaction‚Äù is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party‚Äôs predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\n\n\nA ‚Äúcontributor‚Äù is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor‚Äôs ‚Äúcontributor version‚Äù.\nA contributor‚Äôs ‚Äúessential patent claims‚Äù are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, ‚Äúcontrol‚Äù includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor‚Äôs essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a ‚Äúpatent license‚Äù is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To ‚Äúgrant‚Äù such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. ‚ÄúKnowingly relying‚Äù means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient‚Äôs use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is ‚Äúdiscriminatory‚Äù if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\n\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\n\n\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.\n\n\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License ‚Äúor any later version‚Äù applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy‚Äôs public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\n\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ‚ÄúAS IS‚Äù WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\nEND OF TERMS AND CONDITIONS\n\n\n\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ‚Äúcopyright‚Äù line and a pointer to where the full notice is found.\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\nAlso add information on how to contact you by electronic and paper mail.\nIf the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:\n<program>  Copyright (C) <year>  <name of author>\nThis program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type 'show c' for details.\nThe hypothetical commands show w and show c should show the appropriate parts of the General Public License. Of course, your program‚Äôs commands might be different; for a GUI interface, you would use an ‚Äúabout box‚Äù.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a ‚Äúcopyright disclaimer‚Äù for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>.\nThe GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>."
  },
  {
    "objectID": "sessions/01_what_they_forgot.html",
    "href": "sessions/01_what_they_forgot.html",
    "title": "What they forgot to teach you about R",
    "section": "",
    "text": "Do you use R in your daily work and research but you still feel your workflow isn‚Äôt as smooth as it could be? In this lecture, I will share with you my best tips from 8 years experience with R. We will cover those concepts and tricks that are often overlooked but can make a big difference. Whether you‚Äôre a beginner or more experienced R programmer, this lecture will enhance your workflow and help you write clean, reproducible and reusable code in R.\n\nSlides in full screen ¬†¬†¬† Download PDF slides"
  },
  {
    "objectID": "sessions/01_what_they_forgot.html#summary",
    "href": "sessions/01_what_they_forgot.html#summary",
    "title": "What they forgot to teach you about R",
    "section": "Summary",
    "text": "Summary\nThere are many good practice tools and tips that require minimal effort and that can be implemented in your workflow immediately. You can refer to the following checklist to see where you can still improve your project. For more details please have a look at the slides and the further resources linked below.\n\nProject setup\n\nKeep all of your project files in one location and separate them into sub folders to have a good overview\nMake your project and R Studio Project\nGive your files meaningful names that are machine readable, human readable, and that work well with default ordering\n\n\n\nCode\n\nFollow the standard structure of a code file\nModularize your code and don‚Äôt write one single very long script\nUse save relative paths and avoid setwd() (This is easy if you use R Studio projects)\nFollow a styleguide for your code (e.g.¬†the tidyverse styleguide)\n\nUse the lintr and the styler package to help you with that\n\n\n\n\nDependencies\n\nManage your dependencies with renv to avoid your code from breaking the future"
  },
  {
    "objectID": "sessions/01_what_they_forgot.html#further-links",
    "href": "sessions/01_what_they_forgot.html#further-links",
    "title": "What they forgot to teach you about R",
    "section": "Further links",
    "text": "Further links\n\nWhat they forgot to teach you about R book by Jenny Bryan and Jim Hester\nBlogpost by Jenny Bryan on good project-oriented workflows\nR best practice blogpost by Krista L. DeStasio\nBook about coding style for R: The tidyverse style guide\nThe Turing way book General concepts and things to think about regarding reproducible research\nrenv package website\nstyler package website\nlintr package website"
  },
  {
    "objectID": "sessions/02_quarto.html",
    "href": "sessions/02_quarto.html",
    "title": "Reproducible documents with Quarto",
    "section": "",
    "text": "Quarto (the successor of rmarkdown) is a powerful tool that enables the seamless integration of code (R, Python, and more) and its output into a variety of formats such as reports, research papers, presentations, and more. This tool streamlines the process of creating reproducible workflows by eliminating the need to copy and paste figures, tables, or numbers. During this lecture, you‚Äôll learn the fundamentals of Quarto and explore practical use cases that you can implement in your data analysis workflow.\n\nSlides in full screen ¬†¬†¬† Download PDF slides"
  },
  {
    "objectID": "sessions/02_quarto.html#summary",
    "href": "sessions/02_quarto.html#summary",
    "title": "Reproducible documents with Quarto",
    "section": "Summary",
    "text": "Summary\nQuarto allows you to combine code in R, Python or Julia with text to create reproducible documents in various output formats. You can create e.g.\n\nDocuments: HTML, PDF, Word, Open Office format\nPresentations: Revealjs (HTML) or Powerpoint\nWebsites\nBooks: HTML or ePub"
  },
  {
    "objectID": "sessions/02_quarto.html#example-project",
    "href": "sessions/02_quarto.html#example-project",
    "title": "Reproducible documents with Quarto",
    "section": "Example project",
    "text": "Example project\nTo get started, you can download the Quarto demo project from Github (To download just click on the green Code button and then download the zip folder). It contains some simple and more complex Quarto examples. Have a look at the README of the the project for more information. If you use R Studio, open the project by double clicking on the quarto_demo.Rproj file."
  },
  {
    "objectID": "sessions/02_quarto.html#further-links",
    "href": "sessions/02_quarto.html#further-links",
    "title": "Reproducible documents with Quarto",
    "section": "Further links",
    "text": "Further links\nTo continue learning, I recommend, checking out the following resources:\n\nQuarto website offers everything you need to get started\n\nDownload Quarto and starting guide for different IDEs\nGuides for different output formats\nGallery with Examples\n\nQuarto introduction workshop on Youtube\nA curated collection of resources"
  },
  {
    "objectID": "sessions/03_git.html",
    "href": "sessions/03_git.html",
    "title": "Introduction to version control with Git",
    "section": "",
    "text": "Git is an essential skill if you use any programming language. It allows you to keep track of changes to your project over time, collaborate with others, and maintain a clear and organized project structure. This can save time, improve research efficiency, and also makes it easy to publish your code via platforms such as Github. In this lecture, I will introduce the basic concepts of Git and how to use it for you own projects. The lecture is for Git beginners but also for people who use basic Git for their own projects and want to know a bit more about the concepts behind the workflow.\n\nSlides in full screen ¬†¬†¬† Download PDF slides"
  },
  {
    "objectID": "sessions/03_git.html#summary",
    "href": "sessions/03_git.html#summary",
    "title": "Introduction to version control with Git",
    "section": "Summary",
    "text": "Summary\nInstall git for your machine following this guide\n\nGet started\n\nCommand line\nFollow this Git training for learning the Git concepts in the command line.\n\n\nR and R Studio\nThere is a whole book on using Git with R that explains the setup in detail but also goes into more advanced topics.\nFollow this step by step guide to set up Git and a Github connection in R and R Studio\n\n\nGithub Desktop\nThere are detailed step by step guides on how to set up Github Desktop and how to work with in the Github Desktop Documentation"
  },
  {
    "objectID": "sessions/03_git.html#further-links",
    "href": "sessions/03_git.html#further-links",
    "title": "Introduction to version control with Git",
    "section": "Further links",
    "text": "Further links\nLearn git concepts, not commands: Blogpost that explains really well the concepts of git, also more advanced ones like rebase or cherry-pick.\nHow to write good commit messages: Blogpost that explains why good commit messages are important and gives 7 rules for writing them.\nGit cheat sheet: Always handy if you don‚Äôt remember the basic commands\nBook on how to use Git wih R"
  },
  {
    "objectID": "sessions/04_research_compendia.html",
    "href": "sessions/04_research_compendia.html",
    "title": "Research compenia as R packages",
    "section": "",
    "text": "A research compendium is a collection of all the digital parts of your research project (data, code, documents) which is often required to be published alongside a scientific paper. The structure and tools of R packages provide a standard workflow for building such reproducible research compendia. In this lecture, you will learn how to build, test and publish your research compendia in the form of an R package. This lecture is mainly aimed at people that have some experience with R, R-Studio and Git. But even if you are new to these topics, you will still get a valuable overview of key concepts for reproducible research compendia and tools to build them.\n\nSlides in full screen ¬†¬†¬† Download PDF slides"
  },
  {
    "objectID": "sessions/04_research_compendia.html#preparation",
    "href": "sessions/04_research_compendia.html#preparation",
    "title": "Research compenia as R packages",
    "section": "Preparation",
    "text": "Preparation\nBefore you start with the how-to, please check that you have the following things set up and running.\n\nR packages needed\nFirst, you need to install some packages. Some of them are essential for the core workflow, others are optional for some more advanced features that are described later in the how-to.\nYou can run the following code to install the packages that you still need:\n\npackages_essential <- c(\"devtools\", \"usethis\", \"roxygen2\")\n# install the essential packages\ninstall.packages(setdiff(packages_essential, rownames(installed.packages())))\n\npackages_optional <- c(\"goodpractice\", \"testthat\", \"piggyback\")\n# install the optional packages\ninstall.packages(setdiff(packages_optional, rownames(installed.packages())))\n\n\n\nSet up Git and Github\nYou only need this if you want to use version control with your research compendium, publish on Github and use Github actions to do automated testing of your package. Otherwise, you can skip this step and all the steps in the following guide that involve Git and Github.\nTo set everything up\n\nDownload and install Git on your machine\nCreate a GitHub Account\n\n\n\nPersonal Access token to use with R\nNow, you can add a personal access token (PAT) to your .Renviron file. This way, you can be identified to your Github account when you communicate with Github from R.\nTo set up you PAT call:\n\nusethis::create_github_token()\n\nThis will open Github in the browser (you might need to enter your password).\nOn top, enter a note on what you want to use the token for (e.g.¬†RStudio on my work computer). Then select an appropriate expiration date (90 days is fine in most cases - Github will send you an email when the token is about to expire so you can renew it).\nScroll over the scopes, select ‚Äòrepo‚Äô, ‚Äòuser‚Äô, ‚Äòworkflow‚Äô (usually this is already the default setting) and then click on ‚ÄòGenerate token‚Äô at the bottom.\nLeave the browser page open, copy the generated token to your clipboard and go back to RStudio. Add your PAT to the .Renviron file (don‚Äôt do this if you share your computer with other people or they can access your Github account) by calling:\n\ngitcreds::gitcreds_set()\n\nFollow the prompt in the console and enter your PAT. Now you should be able to work with Github.\n\n\nInstall RTools (only on Windows)\nIf you are on a windows machine and you want to build R packages, you need to install RTools which contains the toolchains for building packages.\nYou can check if you already have Rtools installed with\n\n# Returns TRUE if Rtools is correctly installed\ndevtools::find_rtools()\n\nIf you need to install it, you can download Rtools from here. Chose the appropriate version for your version of R and follow the installation process."
  },
  {
    "objectID": "sessions/04_research_compendia.html#step-1-create-an-empty-r-package",
    "href": "sessions/04_research_compendia.html#step-1-create-an-empty-r-package",
    "title": "Research compenia as R packages",
    "section": "Step 1: Create an empty R package",
    "text": "Step 1: Create an empty R package\nThink of a name for you R package that respects the following rules:\n\nonly ASCII letters, numbers and ‚Äò.‚Äô\nat least two characters\nstarts with a letter\ndoes not end with ‚Äò.‚Äô\n\nIn this example, I chose temperatureBerlin because my example package contains some temperature analysis.\nCreate your package by running\n\nusethis::create_package(\"path/to/package/temperatureBerlin\")\n\nThis will create a new folder, initialize an R package project in there and open the project in a new RStudio session.\nHave a look at your files pane (usually bottom right in RStudio) to see which files were already added.\n\nDuring package development\nCheckout the options that you have in the Build tab in RStudio (you might have to restart RStudio to see it). You can do everything described below either via the buttons in RStudio or by calling functions. During the entire package building process the devtools package is your friend and you can (and should)\n\nfrequently check your package by clicking the Check button or by calling devtools::check() (Keyboard shortcut Ctrl/Cmd + Shift + E)\ntest your functions after running devtools::load_all()\n\nthis simulates installing and loading the package\nmuch better than testing your functions in your current environment\n\nbuild the documentation with devtools::document() (Ctrl/Cmd + Shift + D)\n\nyou have to do this once in the beginning, afterwards devtools::check() will also build the documentation for you\n\ninstall and load the package and restart R with Ctrl/Cmd + Shift + B or with the Install button\n\nYou can already try this out now, because your project is already an (empty) R package."
  },
  {
    "objectID": "sessions/04_research_compendia.html#step-2-initialize-a-git-repository",
    "href": "sessions/04_research_compendia.html#step-2-initialize-a-git-repository",
    "title": "Research compenia as R packages",
    "section": "Step 2: Initialize a Git repository",
    "text": "Step 2: Initialize a Git repository\nTo initialize a Git repository for you package call\n\nusethis::use_git()\n\nFollow the promts in the console, commit your first files with the commit message ‚ÄòInitial commt‚Äô and restart R Studio."
  },
  {
    "objectID": "sessions/04_research_compendia.html#step-3-create-a-research-compendium",
    "href": "sessions/04_research_compendia.html#step-3-create-a-research-compendium",
    "title": "Research compenia as R packages",
    "section": "Step 3: Create a research compendium",
    "text": "Step 3: Create a research compendium\n\nFill out the DESCRIPTION file\nThe DESCRIPTION file contains important metadata about your package and describes which other packages it needs to run correctly. If an R project contains a DESCRIPTION file, RStudio and devtools will consider it an R package.\nThere are a few conventions on how to fill out the fields of the DESCRIPTION file. Have a look at the R packages book to find out more about this.\nFor now, just look at how usethis already created a template for you. Fill out the dummy fields of the description file, e.g.\nPackage: temperatureBerlin\nType: Package\nTitle: Analyse Temperature Data From Berlin\nAuthors@R: \n    person(given = \"Selina\",\n           family = \"Baldauf\",\n           role = c(\"aut\", \"cre\"),\n           email = \"selina.baldauf@fu-berlin.de\")\nDescription: Analysis of the temperature data collected in Berlin from our\n    research project xyz presented in paper abc.\nLicense: `use_mit_license()`, `use_gpl3_license()` or friends to\n    pick a license\nEncoding: UTF-8\nLazyData: true\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.2.3\n\n\nAdd a license\nUse the usethis package to add a license, e.g.¬†for the GNU General Public License 3 (gpl-3) license you can use\nusethis::use_gpl3_license()\nThis adds a file LICENSE.md with your name (or the name(s) specified in the DESCRIPTION file) in it to the project and automatically updates the license field in DESCRIPTION.\n\n\nAdd data\nThe correct folder for datasets you want to make available in your research compendium is the data/ folder. However, the convention of R packages is that you can only store binary .RData files in there. All data that is not in .RData format (e.g.¬†csv files) can go into the data-raw/ folder and then they can be pre-processed and turned into .Rdata files from there.\n\nCreate a dataset with R\nWe first create a data-raw/ folder either manually or with\n\nusethis::use_data_raw(\"temperature\")\n\nThis will create a temperature.R file in data-raw/ which you can use to pre-process your raw data and then add it to the data/ folder as an .RData file.\nIn this R script, you can either create a fake data set using only R code, or you can read a csv file (or other data file), that you put into the data-raw/ folder before.\nAt the end of the script, you call the usethis::use_data() function to compress your data file and store it as .RData file in your package.\nSo, you can just put something like this in the temperature.R file and then run the script:\n\n# create a dummy dataset for temperature measurements\ntemperature <- data.frame(id = 1:10, temp = rnorm(10, mean = 15, sd = 2))\n# or alternatively, if you have temperature data as csv in data-raw/\ntemperature <- readr::read_csv(\"data-raw/temperature.csv\")\n\n# compress and store the data as .Rdata file\nusethis::use_data(temperature, overwrite = TRUE)\n\nNow have a look at the data/ folder in your project, where you will find a temperature.Rdata version of the data.\n\n\n\nAdd an analysis function\nAll R functions for your analysis go in the R/ folder. You can group related functions together in the same script but unrelated functions should go into separate scripts.\nHere, we create a simple function that prints the mean of a vector. We save this function in a new R script called printMean.R. To create this script in the correct location, you can conveniently run\n\nusethis::use_r(\"printMean\")\n\nThis will will create, save and open the script for you.\nNow add the following simple function to the script:\n\n# a simple printer function for the mean of a vector\nprintMean <- function(x){\n  print(paste0(\"The mean value is \", mean(x, na.rm = T), \"!\"))\n}\n\nIf you forgot to do it, you can run devtools::check() now to see if everything is ok in your package. You will get a warning that you did not document your data and your function yet. This is what we will do in the next step.\n\n\nDocument function and data with roxygen2\nYou can document your functions and data using the package roxygen2. Roxygen2 will automatically generate .Rd documentation files in the man/ folder, update the NAMESPACE if you import or export functions and update the DESCRIPTION file if you include any functions from other packages.\nThe basic workflow is:\n\ninsert a roxygen skeleton for your function\n\n\neither use the RStudio GUI Code | Insert Roxygen Skeleton or the keyboard shortcut Ctrl + Alt + Shift + R (on Windows)\n\n\ncall devtools::document() or use Ctrl/Cmd + Shift + D to generate the documentation in the man/ folder and update the NAMESPACE\n\nTo create a documentation for our simple printMean function, navigate to the respective R script, click inside the function and add a roxygen skeleton.\nFill out the skeleton by adding all the information about the function using the roxygen tags. E.g. your roxygen description could look like the following:\n\n#' @title Print mean values in a sentence\n#' @description This function calculates the mean of its input and prints it \n#'    into a sentence. The function is called in the analysis.Rmd file\n#' @export\n#' @param x A vector of numeric values of which to calculate the mean\n#' \n#' @return The output of \\code{\\link{print}} after calculating the \n#'    \\code{\\link{mean}} and pasting it into a sentence\n#'\n#' @examples\n#' printMean(c(1,2,3))\n#'\n\nTo document datasets in your compendium create a new R script with the same name as your dataset in the R/ directory (in our case temperature.R) (remember usethis::use_r(\"temperature\")?) and describe your data set before specifying the name of your dataset as a string. As a bare minimum this could look like the following:\n\n#' @title Temperature data from place X\n#' @description Temperature measurements (2m height) measured on March 21st, \n#'     2009 at place x\n#' @format A \\code{data.frame} with 2 columns, which are:\n#' \\describe{\n#' \\item{id}{id of the sensor}\n#' \\item{temp}{temperature in ¬∞C}\n#'}\n\"temperature\"\n\nUnfortunately, for data sets you can‚Äôt automatically insert a preset roxygen skeleton.\n\n\n\n\n\n\nTip\n\n\n\nIf you are too lazy to document your dataset by hand, you can use the sinew package which is very convenient with package documentation using roxygen2. Install the package with\n\n# install.packages(\"remotes\")\nremotes::install_github('yonicd/sinew')\n\nand then run\n\nsinew::makeOxygen(obj = temperature)\n\nThis will print you a perfect, pre-made skeleton for the data to the console, and you can just copy paste it to your temperature.R file and then fill out the placeholders.\n\n\nIf you now run devtools::document() or rebuild your package, you will find an automatically generated read-only file printMean.Rd and temperature.Rd in the man/ folder of your research compendium. If you now call ?printMean or ?dummyTempData (after installing and restarting) you open the help file just like with any other R function you know.\nPlease also have a look at the conventions and guidelines on roxygen2-documentation and the quick reference of the most common tags.\n\n\nAdd an analysis script\nWe will now add an analysis script in the form of a Quarto document (could also be an R Script instead). Here we write some analysis using the data and functions that we just defined.\nAdd an /analysis folder with an quarto document report.qmd to your compendium. This can for example look like this:\n---\ntitle: \"Temperature Analyis\"\nauthor: \"Selina Baldauf\"\ndate: \"19 July, 2023\"\n---\n\n```{r setup, include=FALSE}\ndevtools::load_all(\".\")\n```\n\n# This is the temperature analysis\n\n```{r}\nprintMean(dummyTempData$temp)\n```\nWith the devtools::load_all(\".\") command, we tell the document to first load all functions included in the package before running the code chunks."
  },
  {
    "objectID": "sessions/04_research_compendia.html#step-4-version-control-with-git-and-github",
    "href": "sessions/04_research_compendia.html#step-4-version-control-with-git-and-github",
    "title": "Research compenia as R packages",
    "section": "Step 4: Version control with Git and GitHub",
    "text": "Step 4: Version control with Git and GitHub\n\nCommit all changes\nIt‚Äôs time to commit all the changes to our package. There are many options how to do this. If you already use Git, use your personal favorite.\nOne simple option is to look for the Git pane (next to Build) in R Studio, then stage all created files (by selecting them in the checkbox) and then to click commit. You are asked to enter a commit message and then you can click on ‚ÄòCommit‚Äô to actually make the commit.\nAlternatively, you could do this in the terminal:\ngit add .\ngit commit -m \"First package version\"\n\n\nMake the compendium a GitHub repository\nTo create a GitHub repository for your package, you can conveniently use the usethis package:\nusethis::use_github()\nFollow the promtpts in the console and this will initialize a new GitHub repository from your compendium and add the url to DESCRIPTION.\nIf you do this for the first time it is possible that you run into some issues if you don‚Äôt have a correct setup yet. But the usethis package will help you through all the steps with its error messages. One thing you definitely need for this step to work is a PAT (personal acces token) for GitHub added to your .Renviron file. Check if you have one or create one with usethis::browse_github_token(). You can find a description of how to get one in the beginning of this how-to."
  },
  {
    "objectID": "sessions/04_research_compendia.html#step-5-add-a-readme-to-your-github-project",
    "href": "sessions/04_research_compendia.html#step-5-add-a-readme-to-your-github-project",
    "title": "Research compenia as R packages",
    "section": "Step 5: Add a readme to your github project",
    "text": "Step 5: Add a readme to your github project\nAdd a README.md to your package that will be rendered on the webpage of your GitHub repository.\nusethis::use_readme_md()\nIn there, you can describe your package and add information on how to download and get started with it. Now you have to commit and push your changes to Github for them to be effective. You can use the same commit strategy as described above for R Studio. Then you can click on the green push button to publish your changes to Github.\nNow your package is published to Github and can be downloaded and installed by others üéâ\nBelow you find some extra steps you can take to include more functionality in your package."
  },
  {
    "objectID": "sessions/04_research_compendia.html#extras",
    "href": "sessions/04_research_compendia.html#extras",
    "title": "Research compenia as R packages",
    "section": "Extras",
    "text": "Extras\n\nHow to include large external data sets with piggyback\nIf you use an R package as a research compendium, you might also want to share large datasets along with it. The problem is, that you cannot manage those large files anymore by tracking them with git and commiting directly to GitHub. However, GitHub allows you to attach up to 2 GB of files to each release of your project. The piggyback package takes advantage of this and allows you to create GitHub releases, upload and download large datasets associated with your compendium.\nFirst, we simulate a large datafile by creating a dataset in our data-raw folder (if you have really large file you would not save them as .txt but rather compress them first).\nlargeDataSet <- data.frame(id = 1:1e6, temp = rnorm(1e6,15,2))\nwrite.table(largeDataSet, \"data-raw/largeDataSet.txt\")\nTo use the piggyback package, you first need to install it on your machine with install.packages(\"piggyback\"). To upload our dataset, we first need to create a new release on GitHub. The first release has to be created on the GitHub website, by clicking on Create a new release, giving it a Tag (e.g.¬†v0.0.1) and a title. You will see that the release contains your source code as zip and as a tarball (.tar.gz).\nWith piggyback you can always list your existing releases by running\n\npiggyback::pb_list()\n\nNow that you created your first release, you can create new releases directly from R with:\n\npiggyback:pb_new_release(\"v0.0.2\")\n\nTo track your dataset (which means that every time the dataset changes you can create a new release), call\n\npiggyback::pb_track(\"data-raw/largeDataSet.txt\")\n\nTo piggyback your dataset to your package, you now simply have to run\n\npiggyback::pb_upload(\"data-raw/largeDataSet.txt\")\n\nNow you can find it attached to your latest release.\nIf you want to use the large dataset in your package for the analysis or to generate the report, you can write a function to download the data using piggyback::pb_download. Just create a new file loadData.R in your R/ directory and add the following function.\n\nloadData <- function(){\n  piggyback::pb_download(repo = \"selinaZitrone/temperture\")\n}\n\nWhen this function is called, it will automatically download all the assets attached to the latest release of the repository and put them in data-raw/. Now the data can be accessed by all the package functions. Have a look at ?piggyback::pb_download to see which parameters you can specify. You don‚Äôt have to download all the assets and you can also chose which version of the release should be used for the download.\nYou can also create new releases directly from piggyback and you can track large datasets by creating new releases if the datasets change. This will not be covered here, but if you are interested have a look at the piggyback documentation.\n\n\nUnit testing\nWith unit testing, you can test the individual functions in your package to make them more reliable. If you want to read about unit testing, you can check out the testing chapter in the Rpkg book.\nFirst, create the infrastructure needed by the thestthat package.\n\nusethis::use_testthat()\n\nThis creates a tests/ folder which contains a testthat/ folder and an R script testthat.R. You do not need to change anything in the testthat.R script. It is called e.g.¬†by rcmdcheck::rcmdcheck() to run all the tests you created in your package. The testthat/ folder is the place to store the R scripts with your actual tests. Also, the testthat package is automatically added to the Suggests field in DESCRIPTION.\nNow you can add a test script that tests your simple printer function. To create a test script for a specific function, open the R-script with the function and then initialize a basic test file for the script by calling\n\nusethis::use_test()\n\nThe testfile can be found in /tests/testthat. Testfiles have to be named test-xyz.R in order to be found (usethis::use_test() does the naming for you - so you don‚Äôt have to worry about it).\nWe can write a very simple test function for our printMean function that checks if it works correctly\n\ntest_that(\"printer function works\", {\n  expect_equal(printMean(c(1,2,3)), \"The mean value is 2!\")\n})\n\nIf you run the test and you don‚Äôt get any errors in the console, then it means that your test was successful. If not you will get a helpful error message telling you what went wrong.\nIf you want to run all the tests from your package at once to see if they pass your can run\n\ndevtools::test()\n\n\n\nImplement a continuous integration workflow with GitHub Actions\nGitHub actions allows you to run code on GitHub servers, everytime you push something there. This can e.g.¬†be used to run the R CMD CHECK that checks your package. This way you can automatically make sure that your package is build without errors. Otherwise you will get notified by Github.\nBefore you implement this, commit all the recent changes and push them to Github.\nThen create the basic file structure needed to set up a workflow by calling\nusethis::use_github_actions()\nThis creates a .github folder, in which you find a .gitignore file and a workflows/ folder. In this folder you can store all your GitHub actions in .yaml file format. usethis automatically added a first GitHub action called R-CMD-check.yaml. This action is triggered on every push or pull request on the master/main branch and checks your package to make sure that new code does not break the package.\nIf you want to add other actions that already are available (e.g.¬†from the GitHub repository r-lib/actions) you can do the following:\n\nusethis::use_github_action(\"render-readme.yaml\")\n\nThis adds the respective yaml-file to .github/workflows. Of course you can also write your own actions and simply add them to the workflows/ folder.\n\n\nAdd an RStudio server with holepunch\nThere is a nice intro for holepunch: Getting started with holepunch. The code below is copied‚Äôn‚Äôpasted from the holepunch repo‚Äôs readme.\n\nremotes::install_github(\"karthik/holepunch\")\n\nholepunch::write_dockerfile(maintainer = \"your_name\") \n# To write a Dockerfile. It will automatically pick the date of the last \n# modified file, match it to that version of R and add it here. You can \n# override this by passing r_date to some arbitrary date\n# (but one for which a R version exists).\n\nholepunch::generate_badge() # This generates a badge for your readme.\n\n# ----------------------------------------------\n# At this time üôå push the code to GitHub üôå\n# ----------------------------------------------\n\n# And click on the badge or use the function below to get the build \n# ready ahead of time.\nholepunch::build_binder()\n# ü§ûüöÄ"
  },
  {
    "objectID": "sessions/04_research_compendia.html#some-more-tips",
    "href": "sessions/04_research_compendia.html#some-more-tips",
    "title": "Research compenia as R packages",
    "section": "Some more tips",
    "text": "Some more tips\n\nYou can use devtools::spell_check() to test your entire package for spelling errors. This is very useful if you have reports or other text intensive files in there. By default, the spell check will be for American English. However, you can change the langauage by adding a Language field to your DESCRIPTION file.\nIf you want to write a new function and generate the corresponding R script in the R/ directory, you can conveniently call usethis::use_r(\"functionName\"). This will create a file functionName.R ind the /R directory and open it for you.\nUse the goodpractice package to further test your package for parts which can be improved. Running goodpractice::gp().{R} will tell you where your comment lines are too long, where you should consider renaming variables, if something is wrong with your NAMESPACE, ‚Ä¶"
  },
  {
    "objectID": "sessions/04_research_compendia.html#links-and-further-reading",
    "href": "sessions/04_research_compendia.html#links-and-further-reading",
    "title": "Research compenia as R packages",
    "section": "Links and further reading",
    "text": "Links and further reading\n\nThe Turing Way website is a very useful guide to reproducible data science\n\n\nAbout Reasearch compendia\n\nA guide to making your data analysis more reproducible: Nice talks and other helpful links and information on research compendia by Karthik Ram\nThe Turing Way guide‚Äôs section on reseach compendia\nRessources collection on research compendia\n\n\n\nR packages\n\nComprehensive book on how to create an R package by Hadley Wickham and Jennifer Bryan\nusethis: workflow package to automate tasks like project setup etc.\n\npkgdown: build a quick and easy website for your package\ngoodpractice: gives you advice about good practices when building R packages\n\n\n\n\nGit and GitHub\n\nBook an using Git and Github with R and R Studio\nGetting started with Github Actions\nTalk by Jim Hester on GitHub Actions with R\nGithub Action Examples with R\n\n\n\nReproducible environments\n\nThe Holepunch package for R and Binder (adds a live, on-demand RStudio server to your R project on GitHub/GitLab)\nIntroduction to Docker for R\n\n\n\nScientific publications\nJames, Justin. 2012. ‚Äú10 Classic Mistakes That Plague Software Development Projects.‚Äù 2012. https://www.techrepublic.com/blog/10-things/10-classic-mistakes-that-plague-software-development-projects/.\nScheller, Robert M, Brian R Sturtevant, Eric J Gustafson, Brendan C Ward, and David J Mladenoff. 2010. ‚ÄúIncreasing the Reliability of Ecological Models Using Modern Software Engineering Techniques.‚Äù Frontiers in Ecology and the Environment 8 (5): 253‚Äì60. https://doi.org/10.1890/080141.\nBaxter, Susan M., Steven W. Day, Jacquelyn S. Fetrow, and Stephanie J. Reisinger. 2006. ‚ÄúScientific Software Development Is Not an Oxymoron.‚Äù PLoS Computational Biology 2 (9): 0975‚Äì78. https://doi.org/10.1371/journal.pcbi.0020087.\nMerali, Zeeya. 2010. ‚ÄúComputational Science: ‚Ä¶Error.‚Äù Nature 467 (7317): 775‚Äì77. https://doi.org/10.1038/467775a.\nStorer, Tim. 2017. ‚ÄúBridging the Chasm: A Survey of Software Engineering Practice in Scientific Programming.‚Äù ACM Computing Surveys 50 (4). https://doi.org/10.1145/3084225.\nMarwick, Ben, Carl Boettiger, and Lincoln Mullen. 2018. ‚ÄúPackaging Data Analytical Work Reproducibly Using R (and Friends).‚Äù American Statistician 72 (1): 80‚Äì88. https://doi.org/10.1080/00031305.2017.1375986."
  },
  {
    "objectID": "sessions/additional_material/02_quarto/penguins_paper.html",
    "href": "sessions/additional_material/02_quarto/penguins_paper.html",
    "title": "The penguins of Antarctica",
    "section": "",
    "text": "There are three main penguin species in Antarctica (Chinstrap, Gentoo, Adelie). You can see them in Figure¬†1:\n\n\n\n\n\nFigure¬†1: Illustration of the three penguin species by Allison Horst\n\n\n\n\nIn this paper we want to answer the following questions\n\nHow bill depth depends on bill length?\nWhich penguin species has the highest body mass?"
  },
  {
    "objectID": "sessions/additional_material/02_quarto/penguins_paper.html#the-data",
    "href": "sessions/additional_material/02_quarto/penguins_paper.html#the-data",
    "title": "The penguins of Antarctica",
    "section": "2.1 The data",
    "text": "2.1 The data\nThe data was collected on islands in Antarctica and published by Gorman, Williams, and Fraser (2014). You can find the original paper with the title ‚ÄúEcological sexual dimorphism and environmental variability within a community of Antarctic penguins (genus Pygoscelis)‚Äù (Gorman, Williams, and Fraser 2014) in PLoS ONE1\nThe data is published via the palmerpenguins R package (Horst, Hill, and Gorman 2020) which you can find on this website.\nThe data contains (among others) the following measurements:\n\nbill length\nbill depth\nbody mass\nsex\n\nmale\nfemale"
  },
  {
    "objectID": "sessions/additional_material/02_quarto/penguins_paper.html#the-analysis",
    "href": "sessions/additional_material/02_quarto/penguins_paper.html#the-analysis",
    "title": "The penguins of Antarctica",
    "section": "2.2 The analysis",
    "text": "2.2 The analysis\nWe did some plots, calculated some summary statistics and a linear model of the form \\(y = ax + b + \\epsilon\\)"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#who-am-i",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#who-am-i",
    "title": "What they forgot to teach you about R",
    "section": "Who am I?",
    "text": "Who am I?\n\nEcologist, PhD student for some years and now scientific programmer\n\n\n\n\n\n\n\n\nArtwork by Allison Horst, CC BY 4.0"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#what-is-this-lecture-series",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#what-is-this-lecture-series",
    "title": "What they forgot to teach you about R",
    "section": "What is this lecture series?",
    "text": "What is this lecture series?\nScientific workflows: Tools and Tips üõ†Ô∏è\n\nüìÖ Every 3rd Thursday üïì 4-5 p.m. üìç Webex\n\nOne topic from the world of scientific workflows\nTopics range from R programming over notetaking, literature management tools and more\nFor topic suggestions send me an email\nIf you don‚Äôt want to miss a lecture\n\nCheck out the lecture website\nSubscribe to the mailing list\n\nSlides provided on Github"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#what-they-forgot-to-teach-you-about-r",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#what-they-forgot-to-teach-you-about-r",
    "title": "What they forgot to teach you about R",
    "section": "What they forgot to teach you about R",
    "text": "What they forgot to teach you about R\nIt‚Äôs a book by J. Bryan and J. Hesters\n\nArtwork by Allison Horst, CC BY 4.0"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#chaotic-projects-and-workflows",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#chaotic-projects-and-workflows",
    "title": "What they forgot to teach you about R",
    "section": "Chaotic projects and workflows ‚Ä¶",
    "text": "Chaotic projects and workflows ‚Ä¶\n‚Ä¶ can make even small changes frustrating and difficult.\n\nArtwork by Allison Horst, CC BY 4.0"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#background",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#background",
    "title": "What they forgot to teach you about R",
    "section": "Background",
    "text": "Background\n\nReproducibility üîÑ\n\nCan someone else reproduce my results?\n\nReliability üèã\n\nWill my code work in the future?\n\nReusability ‚öôÔ∏è\n\nCan someone else actually use my code?\n\n\n\nToday: Talk best practice rules to write clean, clear and maintainable code.\nIn other words: How to clean the kitchen?"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#use-r-studio-projects",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#use-r-studio-projects",
    "title": "What they forgot to teach you about R",
    "section": "Use R Studio projects",
    "text": "Use R Studio projects\nAlways make your project an R Studio Project (if possible)!\n\n\n\n\nKeep your files together\nAn R Studio Project is just a normal directory with an *.Rproj file\n\ndouble-click this file to open your project in R Studio\n\nAdvantages:\n\nEasy to navigate in R Studio\nProject root is the working directory\nOpen multiple projects in separate R Studio instances"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#create-an-r-studio-project",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#create-an-r-studio-project",
    "title": "What they forgot to teach you about R",
    "section": "Create an R Studio Project",
    "text": "Create an R Studio Project\n\n\n\nFrom scratch:\n\n\nFile -> New Project -> New Directory -> New Project\nEnter a directory name (this will be the name of your project)\nChoose the directory where the project should be initiated\nCreate Project\n\n\n\n\n\nAssociate an existing folder with an R Studio Project:\n\n\nFile -> New Project -> Existing Directory\nChoose your project folder\nCreate Project"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#navigate-an-r-studio-project",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#navigate-an-r-studio-project",
    "title": "What they forgot to teach you about R",
    "section": "Navigate an R Studio Project",
    "text": "Navigate an R Studio Project\nYou can use the Files pane in R Studio to interact with your project folder:\n\n\n\nNavigate and open files\nCreate files and folders\nRename and delete\n‚Ä¶"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#set-up-your-project",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#set-up-your-project",
    "title": "What they forgot to teach you about R",
    "section": "Set up your project",
    "text": "Set up your project\n\nR Studio offers a lot of settings and options.\nSo have a ‚òï and check out Tools -> Global Options and all the other buttons.\n\nR Studio cheat sheet that explains all the buttons\nUpdate R Studio from time to time to get new settings (Help -> Check for Updates)"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#set-up-your-project-1",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#set-up-your-project-1",
    "title": "What they forgot to teach you about R",
    "section": "Set up your project",
    "text": "Set up your project\nR Studio offers a lot of settings and options.\n\n\nMost important setting for reproducibility:\n\nNever save or restore your work space as .Rdata -> You always want to start working with a clean slate"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#name-your-files-properly",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#name-your-files-properly",
    "title": "What they forgot to teach you about R",
    "section": "Name your files properly",
    "text": "Name your files properly\nYour collaborators and your future self will love you for this.\n\nPrinciples 1\nFile names should be\n\nMachine readable\nHuman readable\nWorking with default file ordering\n\n\nFrom this talk by J. Bryan"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#machine-readable-file-names",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#machine-readable-file-names",
    "title": "What they forgot to teach you about R",
    "section": "1. Machine readable file names",
    "text": "1. Machine readable file names\nNames should allow for easy searching, grouping and extracting information from file names.\n\n\nNo space & special characters\n\n\n\nBad examples ‚ùå\nüìÑ 2023-04-20 temperature g√∂ttingen.csv  üìÑ 2023-04-20 rainfall g√∂ttingen.csv \n\n\nGood examples ‚úîÔ∏è\nüìÑ 2023-04-20_temperature_goettingen.csv  üìÑ 2023-04-20_rainfall_goettingen.csv"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#human-readable-file-names",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#human-readable-file-names",
    "title": "What they forgot to teach you about R",
    "section": "2. Human readable file names",
    "text": "2. Human readable file names\nWhich file names would you like to read at 4 a.m. in the morning?\n\nFile names should reveal the file content\nUse separators to make it readable\n\n\nBad examples ‚ùå\nüìÑ 01preparedataforanalysis.R  üìÑ 01firstscript.R \n\n\nGood examples ‚úîÔ∏è\nüìÑ 01_prepare-data-for-analysis.R  üìÑ 01_lm-temperature-trend.R"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#default-ordering",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#default-ordering",
    "title": "What they forgot to teach you about R",
    "section": "3. Default ordering",
    "text": "3. Default ordering\nIf you order your files by name, the ordering should make sense:\n\n(Almost) always put something numeric first\n\nLeft-padded numbers (01, 02, ‚Ä¶)\nDates in YYYY-MM-DD format\n\n\n\nChronological order\nüìÑ 2023-04-20_temperature_goettingen.csv  üìÑ 2023-04-21_temperature_goettingen.csv \n\n\nLogical order\nüìÑ 01_prepare-data.R  üìÑ 02_lm-temperature-trend.R"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#write-beautiful-code",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#write-beautiful-code",
    "title": "What they forgot to teach you about R",
    "section": "Write beautiful code",
    "text": "Write beautiful code\n\nArtwork by Allison Horst, CC BY 4.0\nTry to write code that others (i.e.¬†future you) can understand\nFollow standards for readable and maintainable code\n\nFor R: tidyverse style guide defines code organization, syntax standards, ‚Ä¶"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#standard-code-structure",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#standard-code-structure",
    "title": "What they forgot to teach you about R",
    "section": "Standard code structure",
    "text": "Standard code structure\n\n\n\n\n\nGeneral comment with purpose of the script, author, ‚Ä¶\nlibrary() calls on top\nSet default variables and global options\nSource additional code\nWrite the actual code, starting with loading all data files\n\n\n\n\n# This code replicates figure 2 from the\n# Baldauf et al. 2022 Journal of Ecology paper.\n# Authors: Selina Baldauf, Jane Doe, Jon Doe\n\nlibrary(tidyverse)\nlibrary(vegan)\n\n# set defaults\ninput_file <- \"data/results.csv\"\n\n# source files\nsource(\"R/my_cool_function.R\")\n\n# read input\ninput_data <- read_csv(input_file)"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#mark-sections",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#mark-sections",
    "title": "What they forgot to teach you about R",
    "section": "Mark sections",
    "text": "Mark sections\n\nUse comments to break up your file into sections\n\n\n\n# Load data ---------------------------------------------------------------\n\ninput_data <- read_csv(input_file)\n\n# Plot data ---------------------------------------------------------------\n\nggplot(input_data, aes(x = x, y = y)) +\n  geom_point()\n\n\nInsert a section label with Ctrl/Cmd + Shift\nNavigate sections in the file outline"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#modularize-your-code",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#modularize-your-code",
    "title": "What they forgot to teach you about R",
    "section": "Modularize your Code",
    "text": "Modularize your Code\n\nDon‚Äôt put all your code into one long file (hard to maintain)\n\nWrite multiple files that can be called sequentially\n\nE.g. 01_prepare-data.R, 02_lm-temperature-trend.R, 03_plot-temperture-trends.R\n\nWrite functions that can be called in other scripts\n\nUse the source() function to source these files\nHave one main workflow script that calls these functions sequentially"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#use-save-paths",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#use-save-paths",
    "title": "What they forgot to teach you about R",
    "section": "Use save paths",
    "text": "Use save paths\nTo read and write files, you need to tell R where to find them.\n\nCommon workflow: set working directory with setwd(), then read files from there. But to this Jenny Bryan said:\n\n\n\nIf the first line of your R script is  setwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")  I will come into your office and SET YOUR COMPUTER ON FIRE üî•.\n\n\n\nWhy?\nThis is 100% not reproducible: Your computer at exactly this time is (probably) the only one in the world that has this working directory\n\nAvoid setwd() if it is possible in any way!"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#avoid-setwd",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#avoid-setwd",
    "title": "What they forgot to teach you about R",
    "section": "Avoid setwd()",
    "text": "Avoid setwd()\n\nUse R Studio projects\n\nProject root is automatically the working directory\nGive your project to a friend at it will work on their machine as well\n\n\n\nInstead of\n\n# my unique path from hell with white space and special characters \nsetwd(\"C:/Users/Selina's PC/My Projects/G√∂ttingen Temperatures/temperatures\")\n\nread_csv(\"data/2023-04-20_temperature_goettingen.csv\")\n\n\n\nYou just need\n\nread_csv(\"data/2023-04-20_temperature_goettingen.csv\")\n\n\n\nIf you don‚Äôt use R Studio Projects, have a look at the {here} package for reproducible paths"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---object-names",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---object-names",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Object names",
    "text": "Coding style - Object names\n\n\nVariables and function names should only have lowercase letters, numbers, and _\nUse snake_case for longer variable names\nTry to use concise but meaningful names\n\n\n\n\n# Good\nday_one\nday_1\n\n# Bad\nDayOne\ndayone\nfirst_day_of_the_month\ndm1"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Spacing",
    "text": "Coding style - Spacing\n\n\n\nAlways put spaces after a comma\n\n\n\n# Good\nx[, 1]\n\n# Bad\nx[ , 1]\nx[,1]\nx[ ,1]"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-1",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-1",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Spacing",
    "text": "Coding style - Spacing\n\n\nAlways put spaces after a comma\nNo spaces around parentheses for normal function calls\n\n\n\n# Good\nmean(x, na.rm = TRUE)\n\n# Bad\nmean (x, na.rm = TRUE)\nmean ( x, na.rm = TRUE )"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-2",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-2",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Spacing",
    "text": "Coding style - Spacing\n\n\nAlways put spaces after a comma\nNo spaces around parentheses for normal function calls\nSpaces around most operators (<-, ==, +, etc.)\n\n\n\n# Good\nheight <- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n# Bad\nheight<-feet*12+inches\nmean(x, na.rm=TRUE)"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-3",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-3",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Spacing",
    "text": "Coding style - Spacing\n\n\nAlways put spaces after a comma\nNo spaces around parentheses for normal function calls\nSpaces around most operators (<-, ==, +, etc.)\nSpaces before pipes (%>%, |>) followed by new line\n\n\n\n# Good\niris %>%\n  group_by(Species) %>%\n  summarize_if(is.numeric, mean) %>%\n  ungroup()\n\n# Bad\niris %>% group_by(Species) %>% summarize_all(mean) %>% ungroup()"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-4",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---spacing-4",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Spacing",
    "text": "Coding style - Spacing\n\n\nAlways put spaces after a comma\nNo spaces around parentheses for normal function calls\nSpaces around most operators (<-, ==, +, etc.)\nSpaces before pipes (%>%, |>) followed by new line\nSpaces before + in ggplot followed by new line\n\n\n\n# Good\nggplot(aes(x = Sepal.Width, y = Sepal.Length, color = Species)) +\n  geom_point()\n\n# Bad\nggplot(aes(x = Sepal.Width, y = Sepal.Length, color = Species))+geom_point()"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---line-width",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style---line-width",
    "title": "What they forgot to teach you about R",
    "section": "Coding style - Line width",
    "text": "Coding style - Line width\nTry to limit your line width to 80 characters.\n\nYou don‚Äôt want to scroll to the right to read all code\n80 characters can be displayed on most displays and programs\nSplit your code into multiple lines if it is too long\n\nSee this grey vertical line in R Studio?\n\n\n\n\n# Bad\niris %>%\n  group_by(Species) %>%\n  summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width), Species = n_distinct(Species))\n\n# Good\niris %>%\n  group_by(Species) %>%\n  summarise(\n    Sepal.Length = mean(Sepal.Length),\n    Sepal.Width = mean(Sepal.Width),\n    Species = n_distinct(Species)\n  )"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style",
    "title": "What they forgot to teach you about R",
    "section": "Coding style",
    "text": "Coding style\nDo I really have to remember all of this?\n\nLuckily, no! R and R Studio provide some nice helpers"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---r-studio",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---r-studio",
    "title": "What they forgot to teach you about R",
    "section": "Coding style helpers - R Studio",
    "text": "Coding style helpers - R Studio\nR Studio has style diagnostics that tell you where something is wrong\n\nTools -> Gloabl Options -> Code -> Diagnostics"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---lintr",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---lintr",
    "title": "What they forgot to teach you about R",
    "section": "Coding style helpers - {lintr}",
    "text": "Coding style helpers - {lintr}\nThe lintr package analyses your code files or entire project and tells you what to fix.\n\n\n# install the package before you can use it\ninstall.packages(\"lintr\")\n# lint specific file\nlintr::lint(filename = \"analysis/01_prepare_data.R\")\n# lint a directory (by default the whole project)\nlintr::lint_dir()"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---lintr-1",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---lintr-1",
    "title": "What they forgot to teach you about R",
    "section": "Coding style helpers - {lintr}",
    "text": "Coding style helpers - {lintr}"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---styler",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---styler",
    "title": "What they forgot to teach you about R",
    "section": "Coding style helpers - {styler}",
    "text": "Coding style helpers - {styler}\nThe styler package package automatically styles your files and projects according to the tidyverse style guide.\n\n\n# install from CRAN\ninstall.packages(\"styler\")\n\n\nUse the R Studio Addins for styler:"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---styler-1",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#coding-style-helpers---styler-1",
    "title": "What they forgot to teach you about R",
    "section": "Coding style helpers - {styler}",
    "text": "Coding style helpers - {styler}\n\nPro-Tip: Add a custom keyboard short cut to style your files\n\nTools -> Modify Keyboard Shortcuts"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#manage-dependencies-with-renv",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#manage-dependencies-with-renv",
    "title": "What they forgot to teach you about R",
    "section": "Manage dependencies with {renv}",
    "text": "Manage dependencies with {renv}\n\n\nIdea: Have a project-local environment with all packages needed by the project\n\nKeep log of the packages and versions you use\nRestore the local project library on other machines\n\n\n\n\n\n\n\n\n\n\nWhy this is useful?\n\nCode will still work even if packages upgrade\nCollaborators can recreate your local project library with one function\nExplicit dependency file states all dependencies\n\n\n\nCheck out the renv website for more information"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#manage-dependencies-with-renv-1",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#manage-dependencies-with-renv-1",
    "title": "What they forgot to teach you about R",
    "section": "Manage dependencies with {renv}",
    "text": "Manage dependencies with {renv}\n\n# Get started\ninstall.packages(\"renv\")\n\n\nVery simple to use and integrate into your project workflow:\n\n# Step 1: initialize a project level R library\nrenv::init()\n# Step 2: save the current status of your library to a lock file\nrenv::snapshot()\n# Step 3: restore state of your project from renv.lock\nrenv::restore()\n\n\nYour collaborators only need to install the renv package, then they can also call renv::restore()\nWhen you create an R Studio project there is a check mark to initialize with renv"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#clean-projects-and-workflows",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#clean-projects-and-workflows",
    "title": "What they forgot to teach you about R",
    "section": "Clean projects and workflows ‚Ä¶",
    "text": "Clean projects and workflows ‚Ä¶\n‚Ä¶ allow you and others to work productively.\n\nArtwork by Allison Horst, CC BY 4.0"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#take-aways",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#take-aways",
    "title": "What they forgot to teach you about R",
    "section": "Take aways",
    "text": "Take aways\nThere are a lot of things that require minimal effort and that you can start to implement into your workflow NOW\n\nUse R Studio projects -> Avoid setwd()!\nKeep your projects clean\n\n\nSort your files into folders\nGive your files meaningful names\n\n\nUse styler to style your code automatically\nUse lintr and let R analyse your project\nConsider renv for project local environments"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#outlook",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#outlook",
    "title": "What they forgot to teach you about R",
    "section": "Outlook",
    "text": "Outlook\nOf course there is much more:\n\nVersion control with Git\nUsing R packages to build a research compendium\nDocker containers for full reproducibility\n‚Ä¶\n\n\nBut this is for another time"
  },
  {
    "objectID": "slides/2023_04_20_what_they_forgot_to_teach_you.html#next-lecture",
    "href": "slides/2023_04_20_what_they_forgot_to_teach_you.html#next-lecture",
    "title": "What they forgot to teach you about R",
    "section": "Next lecture",
    "text": "Next lecture\n\nWrite reproducible documents with Quarto\nQuarto (the successor of rmarkdown) is a powerful tool that enables the seamless integration of code (R, Python, and more) and its output into a variety of formats such as reports, research papers, presentations, and more. This tool streamlines the process of creating reproducible workflows by eliminating the need to copy and paste figures, tables, or numbers. During this lecture, you‚Äôll learn the fundamentals of Quarto and explore practical use cases that you can implement in your data analysis workflow.\n\nüìÖ 11th May üïì 4-5 p.m. üìç Webex\n\nFor topic suggestions and/or feedback send me an email\nSubscribe to the mailing list"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#what-is-this-lecture-series",
    "href": "slides/2023_05_11_quarto.html#what-is-this-lecture-series",
    "title": "Reproducible documents with Quarto",
    "section": "What is this lecture series?",
    "text": "What is this lecture series?\nScientific workflows: Tools and Tips üõ†Ô∏è\n\nüìÖ Every 3rd Thursday üïì 4-5 p.m. üìç Webex\n\nOne topic from the world of scientific workflows\nFor topic suggestions send me an email\nIf you don‚Äôt want to miss a lecture\n\nCheck out the lecture website\nSubscribe to the mailing list\n\nSlides provided on Github"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#reproducible-documents-with-quarto",
    "href": "slides/2023_05_11_quarto.html#reproducible-documents-with-quarto",
    "title": "Reproducible documents with Quarto",
    "section": "Reproducible documents with Quarto",
    "text": "Reproducible documents with Quarto\n\n\nQuarto is an open-source scientific and technical publishing system\n\n\n\nBasic idea: Create documents with dynamic content and text\n\n\n\n\n\nArtwork from ‚ÄúHello, Quarto‚Äù keynote by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#reproducible-documents-with-quarto-1",
    "href": "slides/2023_05_11_quarto.html#reproducible-documents-with-quarto-1",
    "title": "Reproducible documents with Quarto",
    "section": "Reproducible documents with Quarto",
    "text": "Reproducible documents with Quarto\nDocument types that can be created with Quarto (examples):\n\nDocuments: HTML, PDF, Word\nPresentations: HTML, Powerpoint\nBooks: HTML, ePub, PDF\nWebsites"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#before-we-start",
    "href": "slides/2023_05_11_quarto.html#before-we-start",
    "title": "Reproducible documents with Quarto",
    "section": "Before we start",
    "text": "Before we start\nQuarto is a huge topic and there are so many cool Quarto things!\n\nGoal of today: Introduction to Quarto and an overview of different document types and their possibilities.\n\nFocus on R and R Studio\nKeep in mind: This also works with other languages and other IDEs, the principles are all the same."
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#how-to-get-quarto",
    "href": "slides/2023_05_11_quarto.html#how-to-get-quarto",
    "title": "Reproducible documents with Quarto",
    "section": "How to get Quarto",
    "text": "How to get Quarto\nDifferent options, depending on your workflow:\n\nIntegrated in new versions of R Studio (Update R Studio via Help -> Check for Updates)\nDownload the CLI for use with other IDE (e.g.¬†Visual Studio code)\n\n\n\nCheck out the Quarto website for download and more info."
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#an-example-document",
    "href": "slides/2023_05_11_quarto.html#an-example-document",
    "title": "Reproducible documents with Quarto",
    "section": "An example document",
    "text": "An example document\nAn HTML example"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#a-standard-workflow",
    "href": "slides/2023_05_11_quarto.html#a-standard-workflow",
    "title": "Reproducible documents with Quarto",
    "section": "A standard workflow",
    "text": "A standard workflow\n\n\n\n\nProblem: Manual updates are error prone and non-reproducible"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#a-quarto-workflow",
    "href": "slides/2023_05_11_quarto.html#a-quarto-workflow",
    "title": "Reproducible documents with Quarto",
    "section": "A Quarto workflow",
    "text": "A Quarto workflow\nSolution: Use a Quarto workflow  everything (code, text, metadata) in one place. Let Quarto do the magic\n\n\nAdvantages of this workflow:\n\nEasy to redo analysis\nNo more copy pasting\nReproducible\n\n\n\nDownload a quarto demo project from Github"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-basic-quarto-workflow",
    "href": "slides/2023_05_11_quarto.html#the-basic-quarto-workflow",
    "title": "Reproducible documents with Quarto",
    "section": "The basic Quarto workflow",
    "text": "The basic Quarto workflow\n\nCreate a .qmd document"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#step-1---create-the-document",
    "href": "slides/2023_05_11_quarto.html#step-1---create-the-document",
    "title": "Reproducible documents with Quarto",
    "section": "Step 1 - Create the document",
    "text": "Step 1 - Create the document\nOpen R Studio and go to File -> New File -> Quarto Document\n\nJust click Create and the file will open in R Studio.\nIn other environments you can just create and empty file with .qmd ending"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-basic-quarto-workflow-1",
    "href": "slides/2023_05_11_quarto.html#the-basic-quarto-workflow-1",
    "title": "Reproducible documents with Quarto",
    "section": "The basic Quarto workflow",
    "text": "The basic Quarto workflow\n\n\nCreate a .qmd document\nWrite the document\n\n\n\ntext e.g.¬†introduction, methods, or discussion\ncode (R, Python, Julia) that produces numbers, figures, tables, ‚Ä¶\nmetadata that defines how the document should look like (e.g.¬†which output format)\n\n\nRender the document to a defined output format (e.g.¬†PDF) using Quarto"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#step-3---render-the-document",
    "href": "slides/2023_05_11_quarto.html#step-3---render-the-document",
    "title": "Reproducible documents with Quarto",
    "section": "Step 3 - Render the document",
    "text": "Step 3 - Render the document\n\n\nClick the Render button in R Studio\nKeyboard shortcut Ctrl + Shift + K\nCall the quarto::quarto_render() function\nIn the terminal: quarto render doc.qmd"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#references-for-all-the-elements",
    "href": "slides/2023_05_11_quarto.html#references-for-all-the-elements",
    "title": "Reproducible documents with Quarto",
    "section": "References for all the elements",
    "text": "References for all the elements\n\n\nMardown syntax reference\nCode chunks:\n\nR code\nPython code\n\nYAML header options:\n\nHTML\nPDF\nDOCX"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-text-body---markdown",
    "href": "slides/2023_05_11_quarto.html#the-text-body---markdown",
    "title": "Reproducible documents with Quarto",
    "section": "The text body - Markdown",
    "text": "The text body - Markdown\nMarkdown is a simple markup language to create formatted text, you can e.g.\n\n\nMake italic text with *text* or bold text with **text**\nGenerate headers of different levels\n\n\n\n# Header level 1\n## Header level 2\n### Header level 3\n\nCreate bullet lists\n\n\n\nA bullet point list\n\n- item 1\n- item 2\n- item 3"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-text-body---markdown-1",
    "href": "slides/2023_05_11_quarto.html#the-text-body---markdown-1",
    "title": "Reproducible documents with Quarto",
    "section": "The text body - Markdown",
    "text": "The text body - Markdown\nYou can also do more complex things like:\n\nIncluding images, links or footnotes\nAdding citations\nLatex style mathematical formulas"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-text-body---markdown-2",
    "href": "slides/2023_05_11_quarto.html#the-text-body---markdown-2",
    "title": "Reproducible documents with Quarto",
    "section": "The text body - Markdown",
    "text": "The text body - Markdown\nIf you don‚Äôt want to use markdown, there is a really nice feature in R Studio: The visual editor."
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-visual-editor-in-r-studio",
    "href": "slides/2023_05_11_quarto.html#the-visual-editor-in-r-studio",
    "title": "Reproducible documents with Quarto",
    "section": "The visual editor in R Studio",
    "text": "The visual editor in R Studio\nConvenient, word-like interface for formatting text and adding features."
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-visual-editor-in-r-studio-1",
    "href": "slides/2023_05_11_quarto.html#the-visual-editor-in-r-studio-1",
    "title": "Reproducible documents with Quarto",
    "section": "The visual editor in R Studio",
    "text": "The visual editor in R Studio\nUsing the visual editor, makes many things that would be painful in Markdown really easy.\nMy favorite feature in the visual editor:\n\nAdd citations (Insert -> Citation) from Zotero library, DOI search, PubMed, ‚Ä¶"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code",
    "href": "slides/2023_05_11_quarto.html#the-code",
    "title": "Reproducible documents with Quarto",
    "section": "The Code",
    "text": "The Code\nCode can be included in code chunks or as inline code"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code-1",
    "href": "slides/2023_05_11_quarto.html#the-code-1",
    "title": "Reproducible documents with Quarto",
    "section": "The Code",
    "text": "The Code\nInline code starts and ends with 1 backtick\n\n\n`r `\n\n\n\nExample\nThe mean of the values 1, 2 and 3 is `r mean(1:3)`\nlooks like this:\nThe mean of the values 1, 2 and 3 is 2."
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code-2",
    "href": "slides/2023_05_11_quarto.html#the-code-2",
    "title": "Reproducible documents with Quarto",
    "section": "The Code",
    "text": "The Code\nCode chunks starts and ends with 3 backticks\n```{r}\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```\n\n\n```{python}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw = {'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code-3",
    "href": "slides/2023_05_11_quarto.html#the-code-3",
    "title": "Reproducible documents with Quarto",
    "section": "The Code",
    "text": "The Code\nInsert a code chunk (R Studio)\n\n\nInsert a code chunk by going to Code -> Insert chunk\nUse the keyboard shortcut Ctrl + Alt + I / Cmd + Option + I\nInline chunks have to be typed or use the </> symbol in visual mode"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code-4",
    "href": "slides/2023_05_11_quarto.html#the-code-4",
    "title": "Reproducible documents with Quarto",
    "section": "The Code",
    "text": "The Code\nRun code chunk\n\nCode chunks are run when document is rendered\nCode chunks can also be run like ‚Äúnormal‚Äù code\nRun Code chunk by clicking on the green arrow next to the chunk"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#the-code-5",
    "href": "slides/2023_05_11_quarto.html#the-code-5",
    "title": "Reproducible documents with Quarto",
    "section": "The code",
    "text": "The code\nCode chunk have special comments that start with #| and that control the behaviour of the chunk.\n```{r}\n#| label: fig-airquality\n#| fig-cap: Temperature and ozone level.\n#| include: false\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```\n\nlabel: Figure and chunk label that can be referred to in text\nfig-cap: Figure caption\ninclude: Include the output (i.e.¬†the plot) in the document but don‚Äôt show the code"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#yaml-header",
    "href": "slides/2023_05_11_quarto.html#yaml-header",
    "title": "Reproducible documents with Quarto",
    "section": "YAML header",
    "text": "YAML header\n\nFor Metadata\n---\ntitle: \"My first document\"\nsubtitle: \"Whatever subtitle makes sense\"\nauthor: \"Selina Baldauf\"\ndate: \"`r Sys.Date()`\"\n---\n\nInline R code can print the current date at render time"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#yaml-header-1",
    "href": "slides/2023_05_11_quarto.html#yaml-header-1",
    "title": "Reproducible documents with Quarto",
    "section": "YAML header",
    "text": "YAML header\nFor document output formats\n---\ntitle: \"My first document\"\nauthor: \"Selina Baldauf\"\ndate: \"`r Sys.Date()`\"\nformat: html\n---\n\nYou can also specify multiple output formats\n---\ntitle: \"My first document\"\nauthor: \"Selina Baldauf\"\ndate: \"`r Sys.Date()`\"\nformat: \n  html: default\n  pdf: default\n  docx: default\n---"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#yaml-header-3",
    "href": "slides/2023_05_11_quarto.html#yaml-header-3",
    "title": "Reproducible documents with Quarto",
    "section": "YAML header",
    "text": "YAML header\nExecute options\n\nDefault options for code chunks\nCan be overwritten by local comments in code chunks\n\n\n---\ntitle: \"My first document\"\nauthor: \"Selina Baldauf\"\ndate: \"`r Sys.Date()`\"\nformat: html\nexecute: \n  message: false\n  warning: false\n---"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#summary",
    "href": "slides/2023_05_11_quarto.html#summary",
    "title": "Reproducible documents with Quarto",
    "section": "Summary",
    "text": "Summary\n\nQuarto combines formatted text and code to create reproducible documents\n\n\nUse cases for scientists\n\nData analysis reports and documents\nUse qmd instead of .R scripts to add text to the code (e.g.¬†for interpretation or method description)\nUse it for teaching material\n‚Ä¶"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#color-slide",
    "href": "slides/2023_05_11_quarto.html#color-slide",
    "title": "Reproducible documents with Quarto",
    "section": "Outlook",
    "text": "Outlook\n\n\n\n\n\n ‚ÄúArtwork from‚ÄùHello, Quarto‚Äù keynote by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.‚Äù"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#outlook",
    "href": "slides/2023_05_11_quarto.html#outlook",
    "title": "Reproducible documents with Quarto",
    "section": "Outlook",
    "text": "Outlook\nQuarto offers many more things like:\n\nPresentations (Powerpoint or Revealjs/HTML)\nWebsites\nEasily publish your documents or websites on quartopub or Github\n\nSee here for more information\n\nControl the rendering process via R scripts using quarto::quarto_render()\nParameterized reports\n\n\n\n ‚ÄúArtwork from‚ÄùHello, Quarto‚Äù keynote by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.‚Äù"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#next-lecture",
    "href": "slides/2023_05_11_quarto.html#next-lecture",
    "title": "Reproducible documents with Quarto",
    "section": "Next lecture",
    "text": "Next lecture\n\nVersion control with Git\nGit is an essential skill if you use any programming language. It allows you to keep track of changes over time, collaborate with others, and maintain a clear and organized file structure. This can save time, improve research efficiency, and makes it easy to publish your code.\n\n\nüìÖ 15th June üïì 4-5 p.m. üìç Webex\nüîî Subscribe to the mailing list\nüìß For topic suggestions and/or feedback send me an email"
  },
  {
    "objectID": "slides/2023_05_11_quarto.html#thank-you-for-your-attention",
    "href": "slides/2023_05_11_quarto.html#thank-you-for-your-attention",
    "title": "Reproducible documents with Quarto",
    "section": "Thank you for your attention :)",
    "text": "Thank you for your attention :)\nQuestions?\n\n\n ‚ÄúArtwork from‚ÄùHello, Quarto‚Äù keynote by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.‚Äù"
  },
  {
    "objectID": "slides/2023_06_15_git.html#what-is-this-lecture-series",
    "href": "slides/2023_06_15_git.html#what-is-this-lecture-series",
    "title": "Introduction to version control with Git",
    "section": "What is this lecture series?",
    "text": "What is this lecture series?\nScientific workflows: Tools and Tips üõ†Ô∏è\n\nüìÖ Every 3rd Thursday üïì 4-5 p.m. üìç Webex\n\nOne topic from the world of scientific workflows\nFor topic suggestions send me an email\nIf you don‚Äôt want to miss a lecture\n\nCheck out the lecture website\nSubscribe to the mailing list\n\nSlides provided on Github"
  },
  {
    "objectID": "slides/2023_06_15_git.html#motivation",
    "href": "slides/2023_06_15_git.html#motivation",
    "title": "Introduction to version control with Git",
    "section": "Motivation",
    "text": "Motivation\nTwo examples in which proper version control can be a life/time saver"
  },
  {
    "objectID": "slides/2023_06_15_git.html#requirements-for-good-version-control",
    "href": "slides/2023_06_15_git.html#requirements-for-good-version-control",
    "title": "Introduction to version control with Git",
    "section": "Requirements for good version control",
    "text": "Requirements for good version control\n\nComplete and long-term history of every file in your project\nSafe (e.g.¬†no accidental loss of versions)\nEasy to use\nOverview and documentation of all changes\nCollaboration should be possible"
  },
  {
    "objectID": "slides/2023_06_15_git.html#version-control-with-git",
    "href": "slides/2023_06_15_git.html#version-control-with-git",
    "title": "Introduction to version control with Git",
    "section": "Version control with Git",
    "text": "Version control with Git\n\nOpen source and free to use version control software\nQuasi standard for software development\nA whole universe of other software and services around it\n\n\nToday\n\nBasic concepts of Git\nA simple workflow in theory and practice\nA small outlook on more advanced features"
  },
  {
    "objectID": "slides/2023_06_15_git.html#version-control-with-git-1",
    "href": "slides/2023_06_15_git.html#version-control-with-git-1",
    "title": "Introduction to version control with Git",
    "section": "Version control with Git",
    "text": "Version control with Git\n\nFor projects with mainly text files (e.g.¬†code, markdown files, ‚Ä¶)\nBasic idea: Take snapshots of your project over time\n\nSnapshots are called commits in Git\n\nA project that is version controlled with Git is called Git repository (or Git repo)"
  },
  {
    "objectID": "slides/2023_06_15_git.html#version-control-with-git-2",
    "href": "slides/2023_06_15_git.html#version-control-with-git-2",
    "title": "Introduction to version control with Git",
    "section": "Version control with Git",
    "text": "Version control with Git\nGit is a distributed version control system\n\n\n\n\n\n\nIdea: many local repositories synced via one remote repo\nEvery machine has full-fledged version of repository with entire history"
  },
  {
    "objectID": "slides/2023_06_15_git.html#how-to-use-git",
    "href": "slides/2023_06_15_git.html#how-to-use-git",
    "title": "Introduction to version control with Git",
    "section": "How to use Git",
    "text": "How to use Git\nAfter you installed it there are different ways to use the software for your projects"
  },
  {
    "objectID": "slides/2023_06_15_git.html#how-to-use-git---terminal",
    "href": "slides/2023_06_15_git.html#how-to-use-git---terminal",
    "title": "Introduction to version control with Git",
    "section": "How to use Git - Terminal",
    "text": "How to use Git - Terminal\nUsing Git from the terminal\n\n\n\n\n Gives you most control\n You find a lot of help online \n\n You need to use the terminal"
  },
  {
    "objectID": "slides/2023_06_15_git.html#how-to-use-git---guis",
    "href": "slides/2023_06_15_git.html#how-to-use-git---guis",
    "title": "Introduction to version control with Git",
    "section": "How to use Git - GUIs",
    "text": "How to use Git - GUIs\nA Git GUI is integrated in most (all?) IDEs, e.g.¬†R Studio\n\n\n\n\n\n\n\n\n (Often) Easy and intuitive \n Stay inside your IDE\n\n Not universal"
  },
  {
    "objectID": "slides/2023_06_15_git.html#how-to-use-git---guis-1",
    "href": "slides/2023_06_15_git.html#how-to-use-git---guis-1",
    "title": "Introduction to version control with Git",
    "section": "How to use Git - GUIs",
    "text": "How to use Git - GUIs\nStandalone Git GUI software, e.g.¬†Github Desktop\n\n\n\n\n\n\n\n Easy and intuitive \n Helps with initial setup of Git \n Nice integration with Github \n\n Switch program to use Git"
  },
  {
    "objectID": "slides/2023_06_15_git.html#how-to-use-git-1",
    "href": "slides/2023_06_15_git.html#how-to-use-git-1",
    "title": "Introduction to version control with Git",
    "section": "How to use Git",
    "text": "How to use Git\nWhich one to choose?\n\nDepends on your prior experience and taste\nIf you never used the terminal before, I recommend to start with Github Desktop\n\nBut in the long run, it‚Äôs definitely worth it looking into the terminal\n\nYou can also mix methods and freely switch between them"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-1-initialize-a-git-repository",
    "href": "slides/2023_06_15_git.html#step-1-initialize-a-git-repository",
    "title": "Introduction to version control with Git",
    "section": "Step 1: Initialize a git repository",
    "text": "Step 1: Initialize a git repository\n\nAdds a (hidden) .git folder to your project that will contain the Git repository\nYou don‚Äôt have to touch anything that is in this folder"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-2-modify-files-and-stage-changes",
    "href": "slides/2023_06_15_git.html#step-2-modify-files-and-stage-changes",
    "title": "Introduction to version control with Git",
    "section": "Step 2: Modify files and stage changes",
    "text": "Step 2: Modify files and stage changes\nGit detects any changes in the working directory"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-2-modify-files-and-stage-changes-1",
    "href": "slides/2023_06_15_git.html#step-2-modify-files-and-stage-changes-1",
    "title": "Introduction to version control with Git",
    "section": "Step 2: Modify files and stage changes",
    "text": "Step 2: Modify files and stage changes\nWhen you want a file to be part of the next commit (i.e.¬†snapshot), you have to stage the file\n\nIn the terminal use git add\nUsually in Git GUIs this is just a check mark next to the file name"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-3-commit-changes",
    "href": "slides/2023_06_15_git.html#step-3-commit-changes",
    "title": "Introduction to version control with Git",
    "section": "Step 3: Commit changes",
    "text": "Step 3: Commit changes\n\nCommits are the snapshots of your project states\nCommit work from staging area to local repository\n\nCollect meaningful chunks of work in the staging area, then commit\n\n\n\n\n\n\n\nAfter a commit, your changes are part of your project‚Äôs git history"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-3-commit-changes-1",
    "href": "slides/2023_06_15_git.html#step-3-commit-changes-1",
    "title": "Introduction to version control with Git",
    "section": "Step 3: Commit changes",
    "text": "Step 3: Commit changes\n\nEvery commit has a unique identifier (so-called hash)\n\nYou can use this hash to come back to the version\n\nEvery commit has a commit message that describes what the changes are about\n\n\n\nRead here for a nice and detailed explanation on good commit messages how to write them."
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-4-create-and-connect-a-remote-repo",
    "href": "slides/2023_06_15_git.html#step-4-create-and-connect-a-remote-repo",
    "title": "Introduction to version control with Git",
    "section": "Step 4: Create and connect a remote repo",
    "text": "Step 4: Create and connect a remote repo\n\nRemote repositories are on a server and can be used to synchronize, share and collaborate\nRemote repositories can be private (only for you and selected collaborators) or public (visible to anyone online)"
  },
  {
    "objectID": "slides/2023_06_15_git.html#step-5-share-your-changes-with-the-remote-repo",
    "href": "slides/2023_06_15_git.html#step-5-share-your-changes-with-the-remote-repo",
    "title": "Introduction to version control with Git",
    "section": "Step 5: Share your changes with the remote repo",
    "text": "Step 5: Share your changes with the remote repo\n\nPush your local changes to the remote with git push"
  },
  {
    "objectID": "slides/2023_06_15_git.html#summary-of-the-basic-steps",
    "href": "slides/2023_06_15_git.html#summary-of-the-basic-steps",
    "title": "Introduction to version control with Git",
    "section": "Summary of the basic steps",
    "text": "Summary of the basic steps\n\n\ngit init: Initialize a git repository\n\nadds a .git folder to your working directory\n\ngit add: Add files to the staging area\n\nThis marks the files as being part of the next commit\n\ngit commit: Take a snapshot of your current project version\n\nIncludes a timestamp, a meaningful commit message and information on the person who did the commit\n\ngit push: Push your newest commits to the remote repository\n\nSync your local project version with the remote e.g.¬†on Github"
  },
  {
    "objectID": "slides/2023_06_15_git.html#get-a-repo-from-a-remote",
    "href": "slides/2023_06_15_git.html#get-a-repo-from-a-remote",
    "title": "Introduction to version control with Git",
    "section": "Get a repo from a remote",
    "text": "Get a repo from a remote\n\n\n\n\n\n\nIn Git language, this is called cloning\nGet a copy of your own repository on a different machine\nGet the repository from somebody else"
  },
  {
    "objectID": "slides/2023_06_15_git.html#get-a-repo-from-a-remote-1",
    "href": "slides/2023_06_15_git.html#get-a-repo-from-a-remote-1",
    "title": "Introduction to version control with Git",
    "section": "Get a repo from a remote",
    "text": "Get a repo from a remote\nBy cloning, you get a full copy of the repository and the working directory with all files on your machine.\n\nClone a remote repository with git clone <remote_address>\n\n\n\n\nIf the clone is authorized it can also commit and push"
  },
  {
    "objectID": "slides/2023_06_15_git.html#get-changes-from-the-remote",
    "href": "slides/2023_06_15_git.html#get-changes-from-the-remote",
    "title": "Introduction to version control with Git",
    "section": "Get changes from the remote",
    "text": "Get changes from the remote\n\nLocal changes, publish to remote: git push\nRemote changes, pull to local: git pull"
  },
  {
    "objectID": "slides/2023_06_15_git.html#a-simple-collaboration-workflow",
    "href": "slides/2023_06_15_git.html#a-simple-collaboration-workflow",
    "title": "Introduction to version control with Git",
    "section": "A simple collaboration workflow",
    "text": "A simple collaboration workflow\n \n\nBy default: Everything on one branch (main)\n\nBranches are connections between specific commits\n\nBasic idea: Pull newest version before you start working, push new version after you are done"
  },
  {
    "objectID": "slides/2023_06_15_git.html#a-more-complex-collaboration-workflow",
    "href": "slides/2023_06_15_git.html#a-more-complex-collaboration-workflow",
    "title": "Introduction to version control with Git",
    "section": "A more complex collaboration workflow",
    "text": "A more complex collaboration workflow\n\nYou can also have multiple branches of the same project"
  },
  {
    "objectID": "slides/2023_06_15_git.html#a-more-complex-collaboration-workflow-1",
    "href": "slides/2023_06_15_git.html#a-more-complex-collaboration-workflow-1",
    "title": "Introduction to version control with Git",
    "section": "A more complex collaboration workflow",
    "text": "A more complex collaboration workflow\n\n\nBranches can be merged using git merge"
  },
  {
    "objectID": "slides/2023_06_15_git.html#remote-repository-platforms",
    "href": "slides/2023_06_15_git.html#remote-repository-platforms",
    "title": "Introduction to version control with Git",
    "section": "Remote repository platforms",
    "text": "Remote repository platforms\nThe combination of Git and a remote repository platform unlocks a lot of possibilities!\n\nAdvanced workflow features for collaboration and open-source development\n\nIssues and pull requests\n\nPublishing and sharing of projects\n\nEasily connect with Zenodo to get a DOI\nAccepted by many journals\n\nAdditional features\n\nProject wikis\nProject websites"
  },
  {
    "objectID": "slides/2023_06_15_git.html#take-home",
    "href": "slides/2023_06_15_git.html#take-home",
    "title": "Introduction to version control with Git",
    "section": "Take home",
    "text": "Take home\n\nGit (+ Github) is very powerful for coding projects\n\nKeep track of your changes and go back if you need to\nCollaborate and share\n\nCan be confusing in the beginning, but Git GUIs make it intuitive\nValuable addition to your toolbox that‚Äôs also relevant outside academia\n\n\n\n\n\n\n\n\nTips for getting started\n\n\nStart using it for small projects and discover features as you go along.\nDon‚Äôt get frustrated by the complexity - it will get better.\nUse a GUI if you don‚Äôt like the terminal."
  },
  {
    "objectID": "slides/2023_06_15_git.html#get-started",
    "href": "slides/2023_06_15_git.html#get-started",
    "title": "Introduction to version control with Git",
    "section": "Get started",
    "text": "Get started\nCommand line\nFollow this Git training for learning the Git concepts in the command line.\nR and R Studio\nThere is a whole book on using Git with R that explains the setup in detail but also goes into more advanced topics.\nFollow this step by step guide to set up Git and a Github connection in R and R Studio\nGithub Desktop\nThere are detailed step by step guides on how to set up Github Desktop and how to work with in the Github Desktop Documentation"
  },
  {
    "objectID": "slides/2023_06_15_git.html#next-lecture",
    "href": "slides/2023_06_15_git.html#next-lecture",
    "title": "Introduction to version control with Git",
    "section": "Next lecture",
    "text": "Next lecture\n\nResearch compendia with R\nA research compendium is a collection of all the digital parts of your research projects (data, code, documents) with the goal of your results being reproducible. You can do this in R by building an R üì¶ which makes it easy to publish a fully reproducible version of your project.\n\n\nüìÖ 20th July üïì 1-2 p.m. üìç Webex\nüîî Subscribe to the mailing list\nüìß For topic suggestions and/or feedback send me an email"
  },
  {
    "objectID": "slides/2023_06_15_git.html#thank-you-for-your-attention",
    "href": "slides/2023_06_15_git.html#thank-you-for-your-attention",
    "title": "Introduction to version control with Git",
    "section": "Thank you for your attention :)",
    "text": "Thank you for your attention :)\nQuestions?"
  },
  {
    "objectID": "slides/2023_06_15_git.html#references",
    "href": "slides/2023_06_15_git.html#references",
    "title": "Introduction to version control with Git",
    "section": "References",
    "text": "References\n\nLearn git concepts, not commands: Blogpost that explains really well the concepts of git, also more advanced ones like rebase or cherry-pick.\nHow to write good commit messages: Blogpost that explains why good commit messages are important and gives 7 rules for writing them.\nGit cheat sheet: Always handy if you don‚Äôt remember the basic commands\nBook on how to use Git wih R\n\n\n\nVersion control with Git"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#what-is-this-lecture-series",
    "href": "slides/2023_07_20_research_compendia.html#what-is-this-lecture-series",
    "title": "Research compendia as R packages",
    "section": "What is this lecture series?",
    "text": "What is this lecture series?\nScientific workflows: Tools and Tips üõ†Ô∏è\n\nüìÖ Every 3rd Thursday üïì 4-5 p.m. üìç Webex\n\nOne topic from the world of scientific workflows\nFor topic suggestions send me an email\nIf you don‚Äôt want to miss a lecture\n\nCheck out the lecture website\nSubscribe to the mailing list\n\nSlides provided on Github"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#steps-of-a-scientific-project",
    "href": "slides/2023_07_20_research_compendia.html#steps-of-a-scientific-project",
    "title": "Research compendia as R packages",
    "section": "Steps of a scientific project",
    "text": "Steps of a scientific project\n\n\n\n\n\n\nThis image was created by Scriberia for The Turing Way community and is used under a CC-BY licence (DOI 10.5281/zenodo.3332807)."
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#steps-of-a-scientific-project-1",
    "href": "slides/2023_07_20_research_compendia.html#steps-of-a-scientific-project-1",
    "title": "Research compendia as R packages",
    "section": "Steps of a scientific project",
    "text": "Steps of a scientific project\nHow to properly structure the project?\n\nI want\n\nüîÉ Reproduciblity (for you and others)\nüèã Reliablity (will it work again?)\n‚öô Re-usablity (don‚Äôt re-invent the wheel)\nüîç Visiblity (let others see and use your work)"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#how-use-a-research-compendium",
    "href": "slides/2023_07_20_research_compendia.html#how-use-a-research-compendium",
    "title": "Research compendia as R packages",
    "section": "How? Use a research compendium!",
    "text": "How? Use a research compendium!\n\n\n\n\n\n\n\n\n\nThis image was created by Scriberia for The Turing Way community and is used under a CC-BY licence (DOI 10.5281/zenodo.3332807).\n\n\nWhat is a research compendium?\n\nCollection of all digital parts of a research project (data + code + text)\n\n\n\n\nThe goal of a research compendium is to provide a standard and easily recognizable way for organizing the digital materials of a project to enable others to inspect, reproduce, and extend the research.\n\nFrom Marwick et al.¬†2018"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#principles-for-building-research-compendia",
    "href": "slides/2023_07_20_research_compendia.html#principles-for-building-research-compendia",
    "title": "Research compendia as R packages",
    "section": "Principles for building research compendia",
    "text": "Principles for building research compendia\n\nStick with the conventions in your field\nKeep data, methods and output separate\n\nOriginal data read only, output considered disposable\n\nSpecify the computational environment\nKey components for sharing the compendium include\n\nLicence\nVersion control\nMetadata\nPersistent identifier (e.g DOI)"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#examples-of-different-complexities",
    "href": "slides/2023_07_20_research_compendia.html#examples-of-different-complexities",
    "title": "Research compendia as R packages",
    "section": "Examples of different complexities",
    "text": "Examples of different complexities\n\n\nSmall compendium\n\n\n\nMedium size compendium\n\n\n\n\nThey are R packages!\n\n\nMarwick et al.¬†2018"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#r-packages-as-research-compendia",
    "href": "slides/2023_07_20_research_compendia.html#r-packages-as-research-compendia",
    "title": "Research compendia as R packages",
    "section": "R packages as research compendia",
    "text": "R packages as research compendia\n\nBasic idea: Hijack the R package development ecosystem to build a research compendium\nDifferent use cases, e.g.\n\nPublish code, data and analysis scripts alongside your paper\nPublish a dataset in a way that other people can work with it in R"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#some-benefits-of-r-packages",
    "href": "slides/2023_07_20_research_compendia.html#some-benefits-of-r-packages",
    "title": "Research compendia as R packages",
    "section": "Some benefits of R packages",
    "text": "Some benefits of R packages\n\nBenefit from quality control mechanisms built around R packages\nAdditional packages around this ecosystem to make your life easier\nEasy documentation\nEasy sharing of data"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#summary-and-conclusions",
    "href": "slides/2023_07_20_research_compendia.html#summary-and-conclusions",
    "title": "Research compendia as R packages",
    "section": "Summary and Conclusions",
    "text": "Summary and Conclusions\nIt‚Äôs convenient to have standards you can follow\n\nR packages provide an helpful development ecosystem that we can hijack for our research compendia\nYou can develop your compendium in different ways\n\nPurpose is for people to install the package in the end\nPurpose is just to use the quality checks from R Studio\n\n\nusethis is a great workflow package that allows us to seamlessly follow this workshop"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#outlook",
    "href": "slides/2023_07_20_research_compendia.html#outlook",
    "title": "Research compendia as R packages",
    "section": "Outlook",
    "text": "Outlook\n\nInclude large datasets with piggyback\nAutomated tests with Github actions\nUnit tests to test your functions using testthat\nEasily connect Github repo to Zenodo to get a DOI\nholepunch package to build a Docker image\n\n\nThe nice thing:\n\nAlso this easy to set up with usethis and friends\nThey are also documented on the lecture series website"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#next-lecture",
    "href": "slides/2023_07_20_research_compendia.html#next-lecture",
    "title": "Research compendia as R packages",
    "section": "Next lecture",
    "text": "Next lecture\nSummer/Conference break in August and September!\n\nTime for some feedback from you!\nPlease fill out the questionnaire if you have time (5 mins)\n\n\n\nTopic of next lecture t.b.a.\nüìÖ 19th October üïì 1-2 p.m. üìç Webex\nüîî Subscribe to the mailing list\nüìß For topic suggestions and/or feedback send me an email"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#thank-you-for-your-attention",
    "href": "slides/2023_07_20_research_compendia.html#thank-you-for-your-attention",
    "title": "Research compendia as R packages",
    "section": "Thank you for your attention :)",
    "text": "Thank you for your attention :)\nQuestions?"
  },
  {
    "objectID": "slides/2023_07_20_research_compendia.html#references",
    "href": "slides/2023_07_20_research_compendia.html#references",
    "title": "Research compendia as R packages",
    "section": "References",
    "text": "References\n\n\nMarwick, Ben, Carl Boettiger, and Lincoln Mullen. 2018. ‚ÄúPackaging Data Analytical Work Reproducibly Using R (and Friends).‚Äù American Statistician 72 (1): 80‚Äì88. https://doi.org/10.1080/00031305.2017.1375986.\nThe Turing Way website is a very useful guide to reproducible data science\nSlides and list of resources for research compendia by Karthik\n\n\n\n\nResearch compendia as R üì¶"
  },
  {
    "objectID": "slides/zzz_template.html#introduction-of-this-lecture-series",
    "href": "slides/zzz_template.html#introduction-of-this-lecture-series",
    "title": "The title of the current lecture",
    "section": "Introduction of this lecture series",
    "text": "Introduction of this lecture series\n\n\nMe: Scientific programmer\nThis lecture series: Idea"
  },
  {
    "objectID": "todo_list.html",
    "href": "todo_list.html",
    "title": "Scientific workflows: Tools and Tips üõ†Ô∏è",
    "section": "",
    "text": "logo for the lecture series on the slides\nUse these nice boxes for tips and exclamation things"
  },
  {
    "objectID": "todo_list.html#quarto",
    "href": "todo_list.html#quarto",
    "title": "Scientific workflows: Tools and Tips üõ†Ô∏è",
    "section": "Quarto",
    "text": "Quarto\n\nFix Figure caption sizes\nAdd link to github project\nLast slide make text smaller"
  }
]